<Activity mc:Ignorable="sap" x:Class="TfsBuild.Process" this:Process.BuildSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.BuildSettings()]" this:Process.TestSpecs="[New Microsoft.TeamFoundation.Build.Workflow.Activities.TestSpecList(New Microsoft.TeamFoundation.Build.Workflow.Activities.TestAssemblySpec(&quot;**\*test*.dll&quot;))]" this:Process.BuildNumberFormat="[&quot;$(BuildDefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)&quot;]" this:Process.CleanWorkspace="[Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]" this:Process.RunCodeAnalysis="[Microsoft.TeamFoundation.Build.Workflow.Activities.CodeAnalysisOption.AsConfigured]" this:Process.SourceAndSymbolServerSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.SourceAndSymbolServerSettings(True, Nothing)]" this:Process.AgentSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.AgentSettings() With {.MaxWaitTime = New System.TimeSpan(4, 0, 0), .MaxExecutionTime = New System.TimeSpan(0, 0, 0), .TagComparison = Microsoft.TeamFoundation.Build.Workflow.Activities.TagComparison.MatchExactly }]" this:Process.AssociateChangesetsAndWorkItems="[True]" this:Process.CreateWorkItem="[True]" this:Process.DropBuild="[True]" this:Process.MSBuildPlatform="[Microsoft.TeamFoundation.Build.Workflow.Activities.ToolPlatform.Auto]" this:Process.PerformTestImpactAnalysis="[True]" this:Process.CreateLabel="[True]" this:Process.DisableTests="[False]" this:Process.Verbosity="[Microsoft.TeamFoundation.Build.Workflow.BuildVerbosity.Normal]" this:Process.SupportedReasons="All" this:Process.ForceCreateVersion="True" this:Process.DoCheckinAssemblyInfoFiles="False" this:Process.AssemblyVersionPattern="1.0.0.0" this:Process.AssemblyFileVersionPattern="1.0.J.B" this:Process.AssemblyInfoFilePattern="AssemblyInfo.*" this:Process.TestSpecsIntegration="[New Microsoft.TeamFoundation.Build.Workflow.Activities.TestSpecList()]" this:Process.DeleteBuildDirectory="True" this:Process.VersionSqlProjFiles="True" this:Process.LabManagerAction="[LabManagerAction.CreateRig]" this:Process.GenerateReleaseNotes="False" this:Process.EnablePostBuildScript="False" this:Process.EnablePostDeploymentScript="False" this:Process.DeploymentPlatform="[DeploymentPlatform.LabManager]" this:Process.EnablePostTestingScript="False" this:Process.DisableCIBuild="True" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:ca="clr-namespace:CustomBuildActivities.Activities;assembly=TFS.CustomBuildActivities" xmlns:cc="clr-namespace:CustomBuildActivities.CustomType;assembly=TFS.CustomBuildActivities" xmlns:cd="clr-namespace:CustomBuildActivities.Deployment;assembly=TFS.CustomBuildActivities" xmlns:ce="clr-namespace:CustomBuildActivities.Enum;assembly=TFS.CustomBuildActivities" xmlns:cf="clr-namespace:CustomBuildActivities.FileActivities;assembly=TFS.CustomBuildActivities" xmlns:l="clr-namespace:LabManager;assembly=TFS.CustomBuildActivities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mt="clr-namespace:Microsoft.TeamFoundation;assembly=Microsoft.TeamFoundation.Common" xmlns:mtbc="clr-namespace:Microsoft.TeamFoundation.Build.Client;assembly=Microsoft.TeamFoundation.Build.Client" xmlns:mtbc1="clr-namespace:Microsoft.TeamFoundation.Build.Client;assembly=Microsoft.TeamFoundation.Build.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" xmlns:mtbw="clr-namespace:Microsoft.TeamFoundation.Build.Workflow;assembly=Microsoft.TeamFoundation.Build.Workflow" xmlns:mtbwa="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Activities;assembly=Microsoft.TeamFoundation.Build.Workflow" xmlns:mtbwt="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Tracking;assembly=Microsoft.TeamFoundation.Build.Workflow" xmlns:mtc="clr-namespace:Microsoft.TeamFoundation.Client;assembly=Microsoft.TeamFoundation.Client" xmlns:mtc1="clr-namespace:Microsoft.TeamFoundation.Client;assembly=Microsoft.TeamFoundation" xmlns:mttbb="clr-namespace:Microsoft.TeamFoundation.TestImpact.BuildIntegration.BuildActivities;assembly=Microsoft.TeamFoundation.TestImpact.BuildIntegration" xmlns:mtvc="clr-namespace:Microsoft.TeamFoundation.VersionControl.Client;assembly=Microsoft.TeamFoundation.VersionControl.Client" xmlns:mtvc1="clr-namespace:Microsoft.TeamFoundation.VersionControl.Common;assembly=Microsoft.TeamFoundation.VersionControl.Common" xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=System" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:s1="clr-namespace:System;assembly=System.Core" xmlns:s2="clr-namespace:System;assembly=System" xmlns:s3="clr-namespace:System;assembly=System.ServiceModel" xmlns:s4="clr-namespace:System;assembly=System.ComponentModel.Composition" xmlns:s5="clr-namespace:System;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:s6="clr-namespace:System;assembly=System.Xml" xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities" xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System" xmlns:sc1="clr-namespace:System.ComponentModel;assembly=WindowsBase" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel" xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=System.Core" xmlns:scg4="clr-namespace:System.Collections.Generic;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:si="clr-namespace:System.IO;assembly=System" xmlns:si1="clr-namespace:System.IO;assembly=mscorlib" xmlns:si2="clr-namespace:System.IO;assembly=System.Core" xmlns:si3="clr-namespace:System.IO;assembly=WindowsBase" xmlns:si4="clr-namespace:System.IO;assembly=System.ServiceModel" xmlns:si5="clr-namespace:System.IO;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:sl="clr-namespace:System.Linq;assembly=System.Core" xmlns:sl1="clr-namespace:System.Linq;assembly=System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:sr="clr-namespace:System.Reflection;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:st="clr-namespace:System.Text;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:sx="clr-namespace:System.Xml;assembly=System.Data" xmlns:sx1="clr-namespace:System.Xml;assembly=System.Xml" xmlns:this="clr-namespace:TfsBuild" xmlns:tva="clr-namespace:TfsBuild.Versioning.Activities;assembly=TfsBuild.Versioning.Activities" xmlns:v="clr-namespace:VCloud;assembly=TFS.CustomBuildActivities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="BuildSettings" Type="InArgument(mtbwa:BuildSettings)" />
    <x:Property Name="TestSpecs" Type="InArgument(mtbwa:TestSpecList)" />
    <x:Property Name="BuildNumberFormat" Type="InArgument(x:String)" />
    <x:Property Name="CleanWorkspace" Type="InArgument(mtbwa:CleanWorkspaceOption)" />
    <x:Property Name="RunCodeAnalysis" Type="InArgument(mtbwa:CodeAnalysisOption)" />
    <x:Property Name="SourceAndSymbolServerSettings" Type="InArgument(mtbwa:SourceAndSymbolServerSettings)" />
    <x:Property Name="AgentSettings" Type="InArgument(mtbwa:AgentSettings)" />
    <x:Property Name="AssociateChangesetsAndWorkItems" Type="InArgument(x:Boolean)" />
    <x:Property Name="CreateWorkItem" Type="InArgument(x:Boolean)" />
    <x:Property Name="DropBuild" Type="InArgument(x:Boolean)" />
    <x:Property Name="MSBuildArguments" Type="InArgument(x:String)" />
    <x:Property Name="MSBuildPlatform" Type="InArgument(mtbwa:ToolPlatform)" />
    <x:Property Name="PerformTestImpactAnalysis" Type="InArgument(x:Boolean)" />
    <x:Property Name="CreateLabel" Type="InArgument(x:Boolean)" />
    <x:Property Name="DisableTests" Type="InArgument(x:Boolean)" />
    <x:Property Name="GetVersion" Type="InArgument(x:String)" />
    <x:Property Name="PrivateDropLocation" Type="InArgument(x:String)" />
    <x:Property Name="Verbosity" Type="InArgument(mtbw:BuildVerbosity)" />
    <x:Property Name="Metadata" Type="mtbw:ProcessParameterMetadataCollection" />
    <x:Property Name="SupportedReasons" Type="mtbc:BuildReason" />
    <x:Property Name="VersionSeedFilePath" Type="InArgument(x:String)" />
    <x:Property Name="ForceCreateVersion" Type="InArgument(x:Boolean)" />
    <x:Property Name="DoCheckinAssemblyInfoFiles" Type="InArgument(x:Boolean)" />
    <x:Property Name="AssemblyVersionPattern" Type="InArgument(x:String)" />
    <x:Property Name="AssemblyFileVersionPattern" Type="InArgument(x:String)" />
    <x:Property Name="AssemblyInfoFilePattern" Type="InArgument(x:String)" />
    <x:Property Name="UseVersionSeedFile" Type="InArgument(x:Boolean)" />
    <x:Property Name="BuildNumberPrefix" Type="InArgument(x:Int32)" />
    <x:Property Name="AssemblyTitlePattern" Type="InArgument(x:String)" />
    <x:Property Name="AssemblyDescriptionPattern" Type="InArgument(x:String)" />
    <x:Property Name="AssemblyConfigurationPattern" Type="InArgument(x:String)" />
    <x:Property Name="AssemblyCompanyPattern" Type="InArgument(x:String)" />
    <x:Property Name="AssemblyProductPattern" Type="InArgument(x:String)" />
    <x:Property Name="AssemblyCopyrightPattern" Type="InArgument(x:String)" />
    <x:Property Name="AssemblyTrademarkPattern" Type="InArgument(x:String)" />
    <x:Property Name="AssemblyCulturePattern" Type="InArgument(x:String)" />
    <x:Property Name="AssemblyInformationalVersionPattern" Type="InArgument(x:String)" />
    <x:Property Name="DeploymentScript" Type="InArgument(x:String)" />
    <x:Property Name="DeploymentScriptParameters" Type="InArgument(mtbwa:StringList)" />
    <x:Property Name="TestSpecsIntegration" Type="InArgument(mtbwa:TestSpecList)" />
    <x:Property Name="IntegrationTestSettings" Type="InArgument(x:String)" />
    <x:Property Name="MoveRigWorkspace" Type="InArgument(x:String)" />
    <x:Property Name="DeleteBuildDirectory" Type="InArgument(x:Boolean)" />
    <x:Property Name="VersionSqlProjFiles" Type="InArgument(x:Boolean)" />
    <x:Property Name="LabManagerScriptLocation" Type="InArgument(x:String)" />
    <x:Property Name="LabManagerRigName" Type="InArgument(x:String)" />
    <x:Property Name="LabManagerLibraryConfigName" Type="InArgument(x:String)" />
    <x:Property Name="LabManagerAction" Type="InArgument(cc:LabManagerAction)" />
    <x:Property Name="GenerateReleaseNotes" Type="InArgument(x:Boolean)" />
    <x:Property Name="ReleaseNotesLastLabel" Type="InArgument(x:String)" />
    <x:Property Name="DeploymentType" Type="InArgument(ce:DeploymentType)" />
    <x:Property Name="PostBuildScriptParameters" Type="InArgument(x:String)" />
    <x:Property Name="PostBuildScript" Type="InArgument(x:String)" />
    <x:Property Name="EnablePostBuildScript" Type="InArgument(x:Boolean)" />
    <x:Property Name="PostDeploymentScript" Type="InArgument(x:String)" />
    <x:Property Name="EnablePostDeploymentScript" Type="InArgument(x:Boolean)" />
    <x:Property Name="PostDeploymentScriptParameters" Type="InArgument(x:String)" />
    <x:Property Name="DeploymentLogScript" Type="InArgument(x:String)" />
    <x:Property Name="MSBuildToolsPath" Type="InArgument(x:String)" />
    <x:Property Name="MSTestToolsPath" Type="InArgument(x:String)" />
    <x:Property Name="PartitionedBuildSettings" Type="InArgument(cc:PartitionedBuildSettings)" />
    <x:Property Name="DeploymentPlatform" Type="InArgument(ce:DeploymentPlatform)" />
    <x:Property Name="EnablePostTestingScript" Type="InArgument(x:Boolean)" />
    <x:Property Name="PostTestingScriptParameters" Type="InArgument(x:String)" />
    <x:Property Name="PostTestingScript" Type="InArgument(x:String)" />
    <x:Property Name="DisableCIBuild" Type="InArgument(x:Boolean)" />
  </x:Members>
  <this:Process.MSBuildArguments>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.MSBuildArguments>
  <this:Process.GetVersion>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.GetVersion>
  <this:Process.Metadata>
    <mtbw:ProcessParameterMetadataCollection>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#102 Build Versioning" Description="This is the pattern used to replace the AssemblyFileVersion value." DisplayName="Assembly File Version Pattern" ParameterName="AssemblyFileVersionPattern" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#102 Build Versioning" Description="This is the pattern used to replace the AssemblyVersion value." DisplayName="Assembly Version Pattern" ParameterName="AssemblyVersionPattern" />
      <mtbw:ProcessParameterMetadata Category="#102 Build Versioning" Description="This is the pattern used to find the AssemblyInfo files.  Generally, you shouldn't need to change this value." DisplayName="AssemblyInfo File Pattern" ParameterName="AssemblyInfoFilePattern" />
      <mtbw:ProcessParameterMetadata Category="#102 Build Versioning" Description="Indicated whether the AssemblyInfo files should be checked back into source control after they are modified." DisplayName="Perform Check-in of the AssemblyInfo Files" ParameterName="DoCheckinAssemblyInfoFiles" />
      <mtbw:ProcessParameterMetadata Category="#102 Build Versioning" Description="If true, the versioning process will create AssemblyVersion or AssemblyFileVersion values even if they do not already exist." DisplayName="Force Create Version" ParameterName="ForceCreateVersion" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#102 Build Versioning" Description="Indicate which values to use as the versioning patterns.  If set to True, the &quot;seedfile.xml&quot; file must exist in the location described by the &quot;Version Seed File Path&quot; setting.  Otherwise, the &quot;Assembly Version Pattern&quot; and &quot;Assembly File Version Pattern&quot; values will be used." DisplayName="Use Version Seed File" ParameterName="UseVersionSeedFile" />
      <mtbw:ProcessParameterMetadata Category="#102 Build Versioning" Description="Relative path location for the seed (xml) file containing the Assembly Version and Assembly File Version values." DisplayName="Version Seed File Path" ParameterName="VersionSeedFilePath" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#102 Build Versioning" Description="Number added to the version component that uses the &quot;B&quot; symbol pattern (Build Number).  This helps create a unique version for a build definition." DisplayName="Build Number Prefix" ParameterName="BuildNumberPrefix" />
      <mtbw:ProcessParameterMetadata Category="#102 Build Versioning" Description="Assembly Title Attribute: String value specifying a friendly name for the assembly. For example, an assembly named comdlg might have the title Microsoft Common Dialog Control." DisplayName="Assembly Title Pattern" ParameterName="AssemblyTitlePattern" />
      <mtbw:ProcessParameterMetadata Category="#102 Build Versioning" Description="Assembly Description Attribute: String value specifying a short description that summarizes the nature and purpose of the assembly." DisplayName="Assembly Description Pattern" ParameterName="AssemblyDescriptionPattern" />
      <mtbw:ProcessParameterMetadata Category="#102 Build Versioning" Description="Assembly Configuration Attribute: String value indicating the configuration of the assembly, such as Retail or Debug. The runtime does not use this value." DisplayName="Assembly Configuration Pattern" ParameterName="AssemblyConfigurationPattern" />
      <mtbw:ProcessParameterMetadata Category="#102 Build Versioning" Description="Assembly Company Attribute: String value specifying a company name.&#xA;" DisplayName="Assembly Company Pattern" ParameterName="AssemblyCompanyPattern" />
      <mtbw:ProcessParameterMetadata Category="#102 Build Versioning" Description="Assembly Product Attribute: String value specifying product information." DisplayName="Assembly Product Pattern" ParameterName="AssemblyProductPattern" />
      <mtbw:ProcessParameterMetadata Category="#102 Build Versioning" Description="Assembly Copyright Attribute: String value specifying copyright information." DisplayName="Assembly Copyright Pattern" ParameterName="AssemblyCopyrightPattern" />
      <mtbw:ProcessParameterMetadata Category="#102 Build Versioning" Description="Assembly Trademark Attribute: String value specifying trademark information." DisplayName="Assembly Trademark Pattern" ParameterName="AssemblyTrademarkPattern" />
      <mtbw:ProcessParameterMetadata Category="#102 Build Versioning" Description="Assembly Culture Attribute: Enumerated field indicating the culture that the assembly supports. An assembly can also specify culture independence, indicating that it contains the resources for the default culture." DisplayName="Assembly Culture Pattern" ParameterName="AssemblyCulturePattern" />
      <mtbw:ProcessParameterMetadata Category="#102 Build Versioning" Description="Assembly Informational Version Attribute: String value specifying version information that is not used by the common language runtime, such as a full product version number. " DisplayName="Assembly Informational Version Pattern" ParameterName="AssemblyInformationalVersionPattern" />
      <mtbw:ProcessParameterMetadata Category="#105 Deployment" DisplayName="Deployment Script" Editor="Microsoft.TeamFoundation.Build.Controls.ServerFileBrowserEditor, Microsoft.TeamFoundation.Build.Controls" ParameterName="DeploymentScript" />
      <mtbw:ProcessParameterMetadata Category="#105 Deployment" Description="Parameters to run the deployment. Any $CIBuildNumber, $DeploymentBuildNumber will be hydrated." DisplayName="Deployment Script Parameters" Editor="Microsoft.TeamFoundation.Build.Controls.StringListEditor, Microsoft.TeamFoundation.Build.Controls" ParameterName="DeploymentScriptParameters" />
      <mtbw:ProcessParameterMetadata Category="#400 Environment Settings" Description="Location on TFS for deployment Scripts" DisplayName="Scripts Location" Editor="Microsoft.TeamFoundation.Build.Controls.ServerFolderBrowserEditor, Microsoft.TeamFoundation.Build.Controls" ParameterName="LabManagerScriptLocation" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#400 Environment Settings" Description="Name of rig to create in lab manager" DisplayName="Rig Name" ParameterName="LabManagerRigName" />
      <mtbw:ProcessParameterMetadata Category="#106 Integration Tests" DisplayName="Tests to Run" Editor="Microsoft.TeamFoundation.Build.Controls.TestSpecListEditor, Microsoft.TeamFoundation.Build.Controls" ParameterName="TestSpecsIntegration" />
      <mtbw:ProcessParameterMetadata Category="#106 Integration Tests" Description="Location of config file used to override test settings" DisplayName="Integration Test Config File" Editor="Microsoft.TeamFoundation.Build.Controls.ServerFileBrowserEditor, Microsoft.TeamFoundation.Build.Controls" ParameterName="IntegrationTestSettings" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#104 Environment Settings" Description="The name of the workspace to move the rig to on successful deployment and testing. If left blank, no move will be done" DisplayName="Workspace to Move" ParameterName="MoveRigWorkspace" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#100 Build" Description="Delete the build directory on the build server once build is complete" DisplayName="Delete Build Directory" ParameterName="DeleteBuildDirectory" />
      <mtbw:ProcessParameterMetadata Category="#102 Build Versioning" Description="Update the 'DacVersion' in sql files" DisplayName="Version SqlProj Files" ParameterName="VersionSqlProjFiles" />
      <mtbw:ProcessParameterMetadata Category="#400 Environment Settings" Description="Name of lab manager library template to use" DisplayName="Rig Template Name" ParameterName="LabManagerLibraryConfigName" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#400 Environment Settings" Description="Actions for a rig: DoNothing, CreateRig, ForceRefreshRig, RefreshRig" DisplayName="Action" ParameterName="LabManagerAction" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#107 Release Notes" DisplayName="Generate Release Notes" ParameterName="GenerateReleaseNotes" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#107 Release Notes" Description="The last label we should generate release notes. If blank we use the label generated by the last 'good' build" DisplayName="ReleaseNotesLastLabel" ParameterName="ReleaseNotesLastLabel" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#105 Deployment" Description="Decide to Deploy, Test, Package or DeployAndTest" DisplayName="DeploymentType" ParameterName="DeploymentType" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#103 Build" Description="The script to run after the build process is completed." DisplayName="PostBuildScript" Editor="Microsoft.TeamFoundation.Build.Controls.ServerFileBrowserEditor, Microsoft.TeamFoundation.Build.Controls" ParameterName="PostBuildScript" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#103 Build" Description="The parameters for the post build script. Any $CIBuildNumber, $DeploymentBuildNumber, $DropFolder parameters will be hydrated." DisplayName="Post Build Script Parameters" ParameterName="PostBuildScriptParameters" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#103 Build" Description="The logic to enable the post build script. Default is false." DisplayName="Post Build Script Enable" ParameterName="EnablePostBuildScript" />
      <mtbw:ProcessParameterMetadata Category="#105 Deployment" Description="The script to log the details of the deployment." DisplayName="DeploymentLogScript" Editor="Microsoft.TeamFoundation.Build.Controls.ServerFileBrowserEditor, Microsoft.TeamFoundation.Build.Controls" ParameterName="DeploymentLogScript" />
      <mtbw:ProcessParameterMetadata Category="#105 Deployment" Description="The script to run after deployment, before integration tests." DisplayName="Post Deployment Script" Editor="Microsoft.TeamFoundation.Build.Controls.ServerFileBrowserEditor, Microsoft.TeamFoundation.Build.Controls" ParameterName="PostDeploymentScript" />
      <mtbw:ProcessParameterMetadata Category="#105 Deployment" Description="Parameters to run after the deployment before the integration tests. Any $CIBuildNumber, $DeploymentBuildNumber, $DropFolder parameters will be hydrated." DisplayName="Post Deployment Script Parameters" ParameterName="PostDeploymentScriptParameters" />
      <mtbw:ProcessParameterMetadata Category="#105 Deployment" Description="Select True to enable the postdeployment script. Default is False." DisplayName="Post Deployment Script Enable" ParameterName="EnablePostDeploymentScript" />
      <mtbw:ProcessParameterMetadata Category="Advanced" Description="For vs2013 should be something like C:\Program Files (x86)\MSBuild\12.0\Bin\" DisplayName="MSBuildToolsPath" ParameterName="MSBuildToolsPath" />
      <mtbw:ProcessParameterMetadata Category="Advanced" Description="If using vs2013 should be something like D:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE" DisplayName="MSTestToolsPath" ParameterName="MSTestToolsPath" />
      <mtbw:ProcessParameterMetadata Category="#105 Deployment" Description="Click the ellipses to fill in build details, i.e TeamProject and Build Name to select. Leave blank CI Build Number unless you want to get specific build." DisplayName="Partitioned Build Settings" Editor="CustomBuildActivities.CustomType.PartitionedBuildUIEditor, TFS.CustomBuildActivities" ParameterName="PartitionedBuildSettings" />
      <mtbw:ProcessParameterMetadata Category="#400 Environment Settings" Description="Select the Deployment Platform, i.e. either VCloud or LabManager. Be aware of that MoveRig functionality does not exist in VCloud yet. By default this value is LabManager." DisplayName="Environment Type" ParameterName="DeploymentPlatform" />
      <mtbw:ProcessParameterMetadata Category="#106 Integration Tests" Description="Enable the post Integration Test Script. Default is False." DisplayName="Enable Post Testing Script" ParameterName="EnablePostTestingScript" />
      <mtbw:ProcessParameterMetadata Category="#106 Integration Tests" Description="This is the script to run after integration tests are completed. " DisplayName="Post Integration Test Script" Editor="Microsoft.TeamFoundation.Build.Controls.ServerFileBrowserEditor, Microsoft.TeamFoundation.Build.Controls" ParameterName="PostTestingScript" />
      <mtbw:ProcessParameterMetadata Category="#106 Integration Tests" Description="Will replace the parameters: $BinariesDirectory for the agent's build directory, $DeploymentBuildNumber for this build, $TestResult for : -1 for Failed, 0 for Unknown, 1 for Successful, $DropFolder for Drop Folder Location" DisplayName="Post Integration Testing Script Parameters" ParameterName="PostTestingScriptParameters" />
      <mtbw:ProcessParameterMetadata Category="Advanced" Description="Set to True by default and will suppress and CI Builds if this build commits a change as part of a Gated Run. If set to false CI Builds will run" DisplayName="Disable CI Build" ParameterName="DisableCIBuild" />
    </mtbw:ProcessParameterMetadataCollection>
  </this:Process.Metadata>
  <sap:VirtualizedContainerService.HintSize>1104,6493</sap:VirtualizedContainerService.HintSize>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces serialized as XML namespaces</mva:VisualBasic.Settings>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="DeployAndTestAndPackage Sequence" sad:XamlDebuggerXmlReader.FileName="D:\Workspace\Source\Deployment\Main\Code\Build\Template\TFL.DeployAndTest.v3.xaml" sap:VirtualizedContainerService.HintSize="1064,6453" mtbwt:BuildTrackingParticipant.Importance="None" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
    <Sequence.Variables>
      <Variable x:TypeArguments="mtbc:IBuildDetail" Name="BuildDetail" />
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="DisableDeployment" />
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="DisableTest" />
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="DisablePackaging" />
      <Variable x:TypeArguments="x:String" Name="BuildNumberList" />
      <Variable x:TypeArguments="x:String" Name="DeployRigScript" />
      <Variable x:TypeArguments="x:String" Name="RefreshRigScript" />
      <Variable x:TypeArguments="x:String" Name="MoveRigScript" />
      <Variable x:TypeArguments="x:String" Name="TFSUrl">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="FailedMessage">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="RigName" />
      <Variable x:TypeArguments="x:String" Name="RigTemplateName" />
      <Variable x:TypeArguments="x:String" Name="IntegrationRigToTest">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="DisablePackageValidation" />
      <Variable x:TypeArguments="x:Boolean" Name="RigExists" />
      <Variable x:TypeArguments="x:Boolean" Name="RigTemplateExists" />
      <Variable x:TypeArguments="x:Boolean" Name="ScriptFileExists" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="ScriptFilePaths" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="ValidBuild" />
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="ValidPackages" />
      <Variable x:TypeArguments="x:String" Name="Groups" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Initialise Variables" sap:VirtualizedContainerService.HintSize="1042,49">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Switch x:TypeArguments="ce:DeploymentType" DisplayName="Get Deployment Type" Expression="[DeploymentType]" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence x:Key="Deploy" sap:VirtualizedContainerService.HintSize="453,181">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="242,57">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[DisableDeployment]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <Sequence x:Key="Test" sap:VirtualizedContainerService.HintSize="453,100">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="242,57">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[DisableTest]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <Sequence x:Key="DeployAndTest" sap:VirtualizedContainerService.HintSize="453,100">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="242,57">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[DisableDeployment]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="242,57">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[DisableTest]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <Sequence x:Key="Package" sap:VirtualizedContainerService.HintSize="453,100">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="242,57">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[DisablePackaging]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <Sequence x:Key="ValidatePackage" sap:VirtualizedContainerService.HintSize="453,100">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="242,57">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[DisablePackageValidation]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </Switch>
      <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;DisableDeployment: &quot; + DisableDeployment.ToString() + &quot; DisableTest: &quot; + DisableTest.ToString() + &quot;Disablepackaging: &quot; + DisablePackaging.ToString()]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
      <Switch x:TypeArguments="ce:DeploymentPlatform" DisplayName="Get Deployment Platform" Expression="[DeploymentPlatform]" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence x:Key="LabManager" DisplayName="Assign LM Scripts" sap:VirtualizedContainerService.HintSize="453,375">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="242,57">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[DeployRigScript]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Deploy-LabManagerRig.ps1</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="242,57">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[RefreshRigScript]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Execute-RefreshRig.ps1</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="242,57">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[MoveRigScript]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Execute-MoveRig.ps1</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <Sequence x:Key="VCloud" DisplayName="Assign PS Scripts for Platform Choice" sap:VirtualizedContainerService.HintSize="453,100">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="242,57">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[DeployRigScript]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Deploy-vApp.ps1</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="242,57">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[RefreshRigScript]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Execute-RefreshVApp.ps1</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="242,57">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[MoveRigScript]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <Sequence x:Key="CurrentDomain" DisplayName="Assign PS Scripts for Platform Choice" sap:VirtualizedContainerService.HintSize="453,100">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="242,57">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[DeployRigScript]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="242,57">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[RefreshRigScript]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="242,57">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[MoveRigScript]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </Switch>
      <Sequence DisplayName="Setup rig names" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[DeploymentPlatform = DeploymentPlatform.CurrentDomain]" DisplayName="If Deploying in current domain" sap:VirtualizedContainerService.HintSize="200,49">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="219,100">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign RigName" sap:VirtualizedContainerService.HintSize="242,57">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[RigName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign IntegrationRigToTest" sap:VirtualizedContainerService.HintSize="242,57">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[IntegrationRigToTest]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Then>
          <If.Else>
            <If Condition="[Not String.IsNullOrEmpty(LabManagerRigName)]" DisplayName="If Rig Names are not Empty" sap:VirtualizedContainerService.HintSize="220,100">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Assign RigName parameters" sap:VirtualizedContainerService.HintSize="264,375">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign RigName" sap:VirtualizedContainerService.HintSize="242,57">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[RigName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[LabManagerRigName]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign Rig TemplateName" sap:VirtualizedContainerService.HintSize="242,57">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[RigTemplateName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[LabManagerLibraryConfigName]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign IntegrationRigToTest" sap:VirtualizedContainerService.HintSize="242,57">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[IntegrationRigToTest]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[RigName]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <mtbwa:WriteBuildError DisplayName="Rig Not Defined Error" sap:VirtualizedContainerService.HintSize="200,375" Message="Rig Name should be defined" />
              </If.Else>
            </If>
          </If.Else>
        </If>
      </Sequence>
    </Sequence>
    <Sequence DisplayName="Get Build and Update Drop Location" sap:VirtualizedContainerService.HintSize="1042,49">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <mtbwa:GetBuildDetail DisplayName="Get the Build" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[BuildDetail]" />
      <Sequence DisplayName="Update Drop Location" sap:VirtualizedContainerService.HintSize="200,49" mtbwt:BuildTrackingParticipant.Importance="Low">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <mtbwa:InvokeForReason DisplayName="Update Build Number for Triggered Builds" sap:VirtualizedContainerService.HintSize="611,49" Reason="Triggered">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <mtbwa:UpdateBuildNumber BuildNumberFormat="[BuildNumberFormat]" DisplayName="Update Build Number" sap:VirtualizedContainerService.HintSize="200,22" />
        </mtbwa:InvokeForReason>
        <If Condition="[DropBuild AndAlso (BuildDetail.Reason And Microsoft.TeamFoundation.Build.Client.BuildReason.Triggered) = BuildDetail.Reason]" DisplayName="If DropBuild And Build Reason is Triggered" sap:VirtualizedContainerService.HintSize="611,49" mtbwt:BuildTrackingParticipant.Importance="Low">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="486,449" mtbwt:BuildTrackingParticipant.Importance="None">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[String.IsNullOrEmpty(BuildDetail.DropLocationRoot)]" DisplayName="If DropLocationRoot is empty" sap:VirtualizedContainerService.HintSize="464,201" mtbwt:BuildTrackingParticipant.Importance="Low">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Throw DisplayName="Throw EmptyDropLocationRootException" Exception="[New Microsoft.TeamFoundation.Build.Workflow.Activities.EmptyDropLocationRootException(BuildDetail.BuildDefinition.Name)]" sap:VirtualizedContainerService.HintSize="269,100" mtbwt:BuildTrackingParticipant.Importance="Low" />
                </If.Then>
              </If>
              <mtbwa:SetBuildProperties DisplayName="Set Drop Location" DropLocation="[BuildDetail.DropLocationRoot + &quot;\&quot; + BuildDetail.BuildDefinition.Name + &quot;\&quot; + BuildDetail.BuildNumber]" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="DropLocation" />
              <mtbwa:CreateDirectory Directory="[BuildDetail.DropLocation]" DisplayName="Create the Drop Location" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Normal" />
            </Sequence>
          </If.Then>
        </If>
        <If Condition="[DropBuild AndAlso BuildDetail.Reason = Microsoft.TeamFoundation.Build.Client.BuildReason.ValidateShelveset]" DisplayName="If DropBuild And Build Reason is ValidateShelveset" sap:VirtualizedContainerService.HintSize="611,410" mtbwt:BuildTrackingParticipant.Importance="Low">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <If Condition="[Not String.IsNullOrEmpty(PrivateDropLocation)]" sap:VirtualizedContainerService.HintSize="464,309" mtbwt:BuildTrackingParticipant.Importance="None">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="231,208" mtbwt:BuildTrackingParticipant.Importance="None">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <mtbwa:SetBuildProperties DisplayName="Set Drop Location for Private Build" DropLocation="[PrivateDropLocation + &quot;\&quot; + BuildDetail.BuildDefinition.Name + &quot;\&quot; + BuildDetail.BuildNumber]" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="DropLocation" />
                  <mtbwa:CreateDirectory Directory="[BuildDetail.DropLocation]" DisplayName="Create the Drop Location" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Normal" />
                </Sequence>
              </If.Then>
              <If.Else>
                <mtbwa:WriteBuildWarning sap:VirtualizedContainerService.HintSize="208,208" Message="The build outputs for this private build will not be copied to the drop location because the PrivateDropLocation is not set." />
              </If.Else>
            </If>
          </If.Then>
        </If>
      </Sequence>
    </Sequence>
    <Sequence DisplayName="Check build defintion name does not contain white space" sap:VirtualizedContainerService.HintSize="1042,49">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[BuildDetail.BuildDefinition.Name.IndexOf(&quot; &quot;) &gt; -1]" sap:VirtualizedContainerService.HintSize="464,201">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Throw Exception="[New ApplicationException(String.Format(&quot;Build name {0} is invalid as it contains white space&quot;, BuildDetail.BuildDefinition.Name))]" sap:VirtualizedContainerService.HintSize="269,100" />
        </If.Then>
      </If>
    </Sequence>
    <mtbwa:AgentScope DisplayName="Run On Agent" sap:VirtualizedContainerService.HintSize="1042,5876" MaxExecutionTime="[AgentSettings.MaxExecutionTime]" MaxWaitTime="[AgentSettings.MaxWaitTime]" ReservationSpec="[AgentSettings.GetAgentReservationSpec()]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
      <mtbwa:AgentScope.Variables>
        <Variable x:TypeArguments="mtbc:IBuildAgent" Name="BuildAgent" />
        <Variable x:TypeArguments="mtvc:Workspace" Name="Workspace" />
        <Variable x:TypeArguments="x:String" Name="BuildDirectory" />
        <Variable x:TypeArguments="x:String" Default="[BuildDetail.BuildNumber]" Name="LabelName" />
        <Variable x:TypeArguments="x:String" Name="WorkspaceName" />
        <Variable x:TypeArguments="x:String" Name="SourcesDirectory" />
        <Variable x:TypeArguments="x:String" Name="BinariesDirectory" />
        <Variable x:TypeArguments="x:String" Name="TestResultsDirectory" />
        <Variable x:TypeArguments="x:String" Name="TestDataLocalFolder" />
        <Variable x:TypeArguments="x:String" Name="DeploymentScriptFilename" />
        <Variable x:TypeArguments="x:String" Name="DeploymentConfigFilename" />
        <Variable x:TypeArguments="x:String" Name="outputDirectory" />
        <Variable x:TypeArguments="x:Boolean" Name="treatTestFailureAsBuildFailure" />
        <Variable x:TypeArguments="x:String" Name="IntegrationTestSettingsFilename" />
        <Variable x:TypeArguments="x:String" Name="DeploymentConfigFileList" />
        <Variable x:TypeArguments="x:String" Name="LabManagerScriptFilename" />
        <Variable x:TypeArguments="x:String" Name="LabManagerScriptParameters" />
        <Variable x:TypeArguments="x:Int32" Name="IsValid" />
        <Variable x:TypeArguments="x:String" Name="LabManagerScriptLocalLocation" />
        <Variable x:TypeArguments="x:Boolean" Default="False" Name="LabManagerTryRefreshRig" />
        <Variable x:TypeArguments="x:String" Name="LabManagerForceRefreshRig" />
        <Variable x:TypeArguments="mtbc:IBuildDetail" Name="ApplicationBuild" />
        <Variable x:TypeArguments="x:String" Name="AppBuildDropLocation" />
        <Variable x:TypeArguments="x:String" Name="AppBuildNumber" />
        <Variable x:TypeArguments="x:String" Name="DeploymentGroups" />
      </mtbwa:AgentScope.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch sap:VirtualizedContainerService.HintSize="1020,49">
        <TryCatch.Variables>
          <Variable x:TypeArguments="x:String" Name="variable1" />
        </TryCatch.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <Sequence DisplayName="Validating Build arguments" sap:VirtualizedContainerService.HintSize="400,100">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign TFS URl Parameter" sap:VirtualizedContainerService.HintSize="495,57">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[TFSUrl]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[BuildDetail.BuildServer.TeamProjectCollection.Uri.AbsoluteUri]</InArgument>
              </Assign.Value>
            </Assign>
            <Sequence DisplayName="Validating Scripts exist" sap:VirtualizedContainerService.HintSize="495,49">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[EnablePostBuildScript]" DisplayName="If PostBuildScript Enabled Check for Script" sap:VirtualizedContainerService.HintSize="200,49">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Post Build Script Enabled" sap:VirtualizedContainerService.HintSize="231,146">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <AddToCollection x:TypeArguments="x:String" Collection="[ScriptFilePaths]" DisplayName="Add PostBuild Script Path to List" sap:VirtualizedContainerService.HintSize="200,22" Item="[PostBuildScript]" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="208,146" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Post Build script disabled, skipping check" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                </If.Else>
              </If>
              <If Condition="[Not DisableDeployment]" DisplayName="If Deploy Build check for Deployment Script" sap:VirtualizedContainerService.HintSize="200,49">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Deployment Enabled" sap:VirtualizedContainerService.HintSize="219,100">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <AddToCollection x:TypeArguments="x:String" Collection="[ScriptFilePaths]" DisplayName="Add Deployment Script Path to List" sap:VirtualizedContainerService.HintSize="200,22" Item="[DeploymentScript]" />
                    <AddToCollection x:TypeArguments="x:String" Collection="[ScriptFilePaths]" DisplayName="Add DeploymentLog Script Path to List" sap:VirtualizedContainerService.HintSize="200,22" Item="[DeploymentLogScript]" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="220,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Deployment disabled, skipping check" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                </If.Else>
              </If>
              <If Condition="[EnablePostDeploymentScript]" DisplayName="If PostDeployScripts Enabled Check for Script" sap:VirtualizedContainerService.HintSize="200,49">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Post Deploy Script Enabled" sap:VirtualizedContainerService.HintSize="219,100">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <AddToCollection x:TypeArguments="x:String" Collection="[ScriptFilePaths]" DisplayName="Add PostDeployment Script Path to List" sap:VirtualizedContainerService.HintSize="200,22" Item="[PostDeploymentScript]" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="220,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Post Deploy script disabled, skipping check" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                </If.Else>
              </If>
              <If Condition="[EnablePostTestingScript]" DisplayName="If PostTestScript Enabled Check for Script" sap:VirtualizedContainerService.HintSize="200,49">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Post Test Script Enabled" sap:VirtualizedContainerService.HintSize="219,100">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <AddToCollection x:TypeArguments="x:String" Collection="[ScriptFilePaths]" DisplayName="Add PostTesting Script Path to List" sap:VirtualizedContainerService.HintSize="200,22" Item="[PostTestingScript]" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="220,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Post Test script disabled, skipping check" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                </If.Else>
              </If>
              <ca:CheckFileExistsinSource DisplayName="Check Script Files exist in Source Control" FileExists="[ScriptFileExists]" FileSourcePaths="[ScriptFilePaths]" sap:VirtualizedContainerService.HintSize="200,22" TFSUrl="[TFSUrl]" />
              <If Condition="[ScriptFileExists]" DisplayName="If all Script Files exist" sap:VirtualizedContainerService.HintSize="200,49">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="219,100" Message="All Scripts exist and have been validated" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                </If.Then>
                <If.Else>
                  <Throw DisplayName="Script File missing - Throw Exception" Exception="[New Exception(&quot;One or more Script Files missing. See Log for details.&quot;)]" sap:VirtualizedContainerService.HintSize="220,100" />
                </If.Else>
              </If>
            </Sequence>
            <Sequence DisplayName="Validating Virtual Platform arguments" sap:VirtualizedContainerService.HintSize="495,296">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Switch x:TypeArguments="ce:DeploymentPlatform" DisplayName="Check which Platform is in use" Expression="[DeploymentPlatform]" sap:VirtualizedContainerService.HintSize="473,172">
                <Switch.Default>
                  <Throw DisplayName="Throw Invalid Deployment Action" Exception="[New Exception(&quot;Invalid DeploymentPlatform selected. Please check BuildDefinition and requeue.&quot;)]" sap:VirtualizedContainerService.HintSize="455,100" />
                </Switch.Default>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence x:Key="VCloud" DisplayName="Validating a VCloud deployment" sap:VirtualizedContainerService.HintSize="528,709">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Switch x:TypeArguments="cc:LabManagerAction" DisplayName="Check the VCloud action" Expression="[LabManagerAction]" sap:VirtualizedContainerService.HintSize="506,193">
                    <Switch.Default>
                      <Throw DisplayName="Throw Invalid VCloud Action" Exception="[New Exception(&quot;Invalid VCloud Action selected. Please check BuildDefinition and requeue.&quot;)]" sap:VirtualizedContainerService.HintSize="455,100" />
                    </Switch.Default>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence x:Key="CreateRig" DisplayName="Validating we can CreateRig" sap:VirtualizedContainerService.HintSize="711,550">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <v:DoesVAppExist DisplayName="Does VApp Exist" sap:VirtualizedContainerService.HintSize="689,22" Result="[RigExists]" RigName="[LabManagerRigName]" />
                      <v:DoesVAppTemplateExist DisplayName="Does VApp Template Exist" sap:VirtualizedContainerService.HintSize="689,22" Result="[RigTemplateExists]" TemplateName="[LabManagerLibraryConfigName]" />
                      <If Condition="[Not RigExists And RigTemplateExists]" DisplayName="If Rig does not exist and Template exists" sap:VirtualizedContainerService.HintSize="689,302">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,201" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]" Message="VCloud Action Validated" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                        </If.Then>
                        <If.Else>
                          <If Condition="[RigExists]" DisplayName="Checking which exception to throw" sap:VirtualizedContainerService.HintSize="464,201">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Throw Exception="[New Exception(String.Format(&quot;[CREATERIG]: Rig {0} already exists. Please delete this Rig or amend your Build Definition&quot;, LabManagerRigName))]" sap:VirtualizedContainerService.HintSize="219,100" />
                            </If.Then>
                            <If.Else>
                              <Throw Exception="[New Exception(String.Format(&quot;[CREATERIG]: Rig Template {0} does not exist. Please double check the name&quot;, LabManagerLibraryConfigName))]" sap:VirtualizedContainerService.HintSize="220,100" />
                            </If.Else>
                          </If>
                        </If.Else>
                      </If>
                    </Sequence>
                    <Sequence x:Key="ForceRigRefresh" DisplayName="Validating we can ForceRigRefresh" sap:VirtualizedContainerService.HintSize="486,387">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <v:DoesVAppTemplateExist DisplayName="Does VApp Template Exist" sap:VirtualizedContainerService.HintSize="464,22" Result="[RigTemplateExists]" TemplateName="[LabManagerLibraryConfigName]" />
                      <If Condition="[RigTemplateExists]" DisplayName="If Template exists" sap:VirtualizedContainerService.HintSize="464,201">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="219,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]" Message="VCloud Action Validated" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New Exception(String.Format(&quot;[FORCEREFRESHRIG]: Rig Template {0} does not exist. Please double check the name&quot;, LabManagerLibraryConfigName))]" sap:VirtualizedContainerService.HintSize="220,100" />
                        </If.Else>
                      </If>
                    </Sequence>
                    <Sequence x:Key="RefreshRig" DisplayName="Validating we can RefreshRig" sap:VirtualizedContainerService.HintSize="733,674">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <v:DoesVAppExist DisplayName="Does VApp Exist" sap:VirtualizedContainerService.HintSize="711,22" Result="[RigExists]" RigName="[LabManagerRigName]" />
                      <If Condition="[RigExists]" DisplayName="If Rig exists" sap:VirtualizedContainerService.HintSize="711,488">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,387" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]" Message="VCloud Action Validated" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Rig doesn't exist" sap:VirtualizedContainerService.HintSize="486,387">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <v:DoesVAppTemplateExist DisplayName="Does VApp Template Exist" sap:VirtualizedContainerService.HintSize="464,22" Result="[RigTemplateExists]" TemplateName="[LabManagerLibraryConfigName]" />
                            <If Condition="[RigTemplateExists]" DisplayName="If Rig Template exists" sap:VirtualizedContainerService.HintSize="464,201">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="219,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]" Message="VCloud Action Validated" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                              </If.Then>
                              <If.Else>
                                <Throw Exception="[New Exception(String.Format(&quot;[REFRESHRIG]: Rig Template {0} does not exist. Please double check the name&quot;, LabManagerLibraryConfigName))]" sap:VirtualizedContainerService.HintSize="220,100" />
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                    <Sequence x:Key="DoNothing" DisplayName="Validating we can DoNothing" sap:VirtualizedContainerService.HintSize="486,387">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <v:DoesVAppExist DisplayName="Does VApp Exist" sap:VirtualizedContainerService.HintSize="464,22" Result="[RigExists]" RigName="[LabManagerRigName]" />
                      <If Condition="[RigExists]" DisplayName="If Rig exists" sap:VirtualizedContainerService.HintSize="464,201">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="219,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]" Message="VCloud Action Validated" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New Exception(String.Format(&quot;[DONOTHING]: Rig {0} does not exist. Please double check the name and Build Definition&quot;, LabManagerRigName))]" sap:VirtualizedContainerService.HintSize="220,100" />
                        </If.Else>
                      </If>
                    </Sequence>
                  </Switch>
                </Sequence>
                <Sequence x:Key="LabManager" DisplayName="Validating a LabManager deployment" sap:VirtualizedContainerService.HintSize="720,418">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="False" DisplayName="If Validate LabManager Enabled" sap:VirtualizedContainerService.HintSize="698,294">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Switch x:TypeArguments="cc:LabManagerAction" DisplayName="Check the LabManager action" Expression="[LabManagerAction]" sap:VirtualizedContainerService.HintSize="473,193">
                        <Switch.Default>
                          <Throw DisplayName="Throw Invalid LabManager Action" Exception="[New Exception(&quot;Invalid LabManager Action has been selected. Please amend the Build Definition&quot;)]" sap:VirtualizedContainerService.HintSize="455,100" />
                        </Switch.Default>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence x:Key="CreateRig" DisplayName="Validating we can CreateRig" sap:VirtualizedContainerService.HintSize="711,550">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <l:DoesRigExist DisplayName="Does Rig Exist" sap:VirtualizedContainerService.HintSize="689,22" Organisation="Fares And Ticketing" Password="LMTF$Bu1ld" Result="[RigExists]" RigName="[LabManagerRigName]" URL="https://tdc2vlm001.onelondon.tfl.local/LabManager" Username="TFSbuild" Workspace="Main" />
                          <l:DoesRigTemplateExist DisplayName="Does Rig Template Exist" sap:VirtualizedContainerService.HintSize="689,22" Organisation="Fares and Ticketing" Password="LMTF$Bu1ld" Result="[RigTemplateExists]" TemplateName="[LabManagerLibraryConfigName]" URL="https://tdc2vlm001.onelondon.tfl.local/LabManager" Username="TFSBuild" Workspace="Main" />
                          <If Condition="[Not RigExists And RigTemplateExists]" DisplayName="If Rig does not exist and Template exists" sap:VirtualizedContainerService.HintSize="689,302">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,201" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]" Message="LabManager Action Validated" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            </If.Then>
                            <If.Else>
                              <If Condition="[RigExists]" DisplayName="Checking which exception to throw" sap:VirtualizedContainerService.HintSize="464,201">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Throw Exception="[New Exception(String.Format(&quot;[CREATERIG]: Rig {0} already exists. Please delete this Rig or amend your Build Definition&quot;, LabManagerRigName))]" sap:VirtualizedContainerService.HintSize="219,100" />
                                </If.Then>
                                <If.Else>
                                  <Throw Exception="[New Exception(String.Format(&quot;[CREATERIG]: Rig Template {0} does not exist. Please double check the name&quot;, LabManagerLibraryConfigName))]" sap:VirtualizedContainerService.HintSize="220,100" />
                                </If.Else>
                              </If>
                            </If.Else>
                          </If>
                        </Sequence>
                        <Sequence x:Key="ForceRigRefresh" DisplayName="Validating we can ForceRigRefresh" sap:VirtualizedContainerService.HintSize="486,387">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <l:DoesRigTemplateExist DisplayName="Does Rig Template Exist" sap:VirtualizedContainerService.HintSize="464,22" Organisation="Fares and Ticketing" Password="LMTF$Bu1ld" Result="[RigTemplateExists]" TemplateName="[LabManagerLibraryConfigName]" URL="https://tdc2vlm001.onelondon.tfl.local/LabManager" Username="TFSBuild" Workspace="Main" />
                          <If Condition="[RigTemplateExists]" DisplayName="If Template exists" sap:VirtualizedContainerService.HintSize="464,201">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="219,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]" Message="LabManager Action Validated" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            </If.Then>
                            <If.Else>
                              <Throw Exception="[New Exception(String.Format(&quot;[FORCEREFRESHRIG]: Rig Template {0} does not exist. Please double check the name&quot;, LabManagerLibraryConfigName))]" sap:VirtualizedContainerService.HintSize="220,100" />
                            </If.Else>
                          </If>
                        </Sequence>
                        <Sequence x:Key="RefreshRig" DisplayName="Validating we can RefreshRig" sap:VirtualizedContainerService.HintSize="733,674">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <l:DoesRigExist DisplayName="Does Rig Exist" sap:VirtualizedContainerService.HintSize="711,22" Organisation="Fares And Ticketing" Password="LMTF$Bu1ld" Result="[RigExists]" RigName="[LabManagerRigName]" URL="https://tdc2vlm001.onelondon.tfl.local/LabManager" Username="TFSbuild" Workspace="Main" />
                          <If Condition="[RigExists]" DisplayName="If Rig exists" sap:VirtualizedContainerService.HintSize="711,488">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,387" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]" Message="LabManager Action Validated" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Rig doesn't exist" sap:VirtualizedContainerService.HintSize="486,387">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <l:DoesRigTemplateExist DisplayName="Does Rig Template Exist" sap:VirtualizedContainerService.HintSize="464,22" Organisation="Fares and Ticketing" Password="LMTF$Bu1ld" Result="[RigTemplateExists]" TemplateName="[LabManagerLibraryConfigName]" URL="https://tdc2vlm001.onelondon.tfl.local/LabManager" Username="TFSBuild" Workspace="Main" />
                                <If Condition="[RigTemplateExists]" DisplayName="If Rig Template exists" sap:VirtualizedContainerService.HintSize="464,201">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="219,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]" Message="LabManager Action Validated" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                  </If.Then>
                                  <If.Else>
                                    <Throw Exception="[New Exception(String.Format(&quot;[REFRESHRIG]: Rig Template {0} does not exist. Please double check the name&quot;, LabManagerLibraryConfigName))]" sap:VirtualizedContainerService.HintSize="220,100" />
                                  </If.Else>
                                </If>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                        <Sequence x:Key="DoNothing" DisplayName="Validating we can DoNothing" sap:VirtualizedContainerService.HintSize="486,387">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <l:DoesRigExist DisplayName="Does Rig Exist" sap:VirtualizedContainerService.HintSize="464,22" Organisation="Fares And Ticketing" Password="LMTF$Bu1ld" Result="[RigExists]" RigName="[LabManagerRigName]" URL="https://tdc2vlm001.onelondon.tfl.local/LabManager" Username="TFSbuild" Workspace="Main" />
                          <If Condition="[RigExists]" DisplayName="If Rig exists" sap:VirtualizedContainerService.HintSize="464,201">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="219,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]" Message="LabManager Action Validated" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            </If.Then>
                            <If.Else>
                              <Throw Exception="[New Exception(String.Format(&quot;[DONOTHING]: Rig {0} does not exist. Please double check the name and Build Definition&quot;, LabManagerRigName))]" sap:VirtualizedContainerService.HintSize="220,100" />
                            </If.Else>
                          </If>
                        </Sequence>
                      </Switch>
                    </If.Then>
                    <If.Else>
                      <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,193" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="LabManager validation is disabled." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                    </If.Else>
                  </If>
                </Sequence>
                <mtbwa:WriteBuildMessage x:Key="CurrentDomain" sap:VirtualizedContainerService.HintSize="453,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="CurrentDomain Deployment. Skipping Virtual Platform validation" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
              </Switch>
            </Sequence>
            <Assign sap:VirtualizedContainerService.HintSize="495,57">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[ValidBuild]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,20">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="ex" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="394,305">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <mtbwa:WriteBuildError sap:VirtualizedContainerService.HintSize="242,22" Message="[ex.Message]" />
                <mtbwa:SetBuildProperties DisplayName="Set Build Status to Failed" sap:VirtualizedContainerService.HintSize="242,22" PropertiesToSet="Status, TestStatus" Status="[BuildStatus.Failed]" TestStatus="[BuildPhaseStatus.Failed]" />
                <Assign sap:VirtualizedContainerService.HintSize="242,57">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[ValidBuild]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <If Condition="[ValidBuild]" DisplayName="If Build is Valid" sap:VirtualizedContainerService.HintSize="1020,5325">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <TryCatch sap:VirtualizedContainerService.HintSize="795,5224">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Sequence sap:VirtualizedContainerService.HintSize="777,5046">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="PostDeploymentScriptLocal" />
                  <Variable x:TypeArguments="x:String" Name="PostDeploymentScriptParametersHydrated" />
                  <Variable x:TypeArguments="x:String" Name="PostDeploymentScriptLogFile" />
                  <Variable x:TypeArguments="x:Int32" Name="PostDeploymentScriptResult" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[PartitionedBuildSettings.UsePartitionedBuild And Not DeploymentType = CustomBuildActivities.Enum.DeploymentType.Test]" DisplayName="Do Partitioning [If (UsePartitionedBuild And Not DeploymentType = DeploymentType.Test)]" sap:VirtualizedContainerService.HintSize="755,49">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Get Application Build and Copy" sap:VirtualizedContainerService.HintSize="219,100">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ForEach x:TypeArguments="cc:PartitionedBuild" DisplayName="For each partitioned build" sap:VirtualizedContainerService.HintSize="200,49" Values="[PartitionedBuildSettings.PartitionedBuilds]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="cc:PartitionedBuild">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="cc:PartitionedBuild" Name="item" />
                          </ActivityAction.Argument>
                          <Sequence sap:VirtualizedContainerService.HintSize="252,100">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="242,57">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[AppBuildNumber]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[Not String.IsNullOrEmpty(item.BuildNumber)]" DisplayName="Evaulate Partitioned Build Type" sap:VirtualizedContainerService.HintSize="242,49">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence DisplayName="Get Specific Build" sap:VirtualizedContainerService.HintSize="219,100">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[AppBuildNumber]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[item.BuildNumber]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Will try to get the build of: {0}, {1}, {2}, {3}&quot;, TFSUrl, item.TeamProjectName, item.BuildDefinitionName, AppBuildNumber)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                  <ca:GetSpecificBuild BuildDefinitionName="[item.BuildDefinitionName]" sap:VirtualizedContainerService.HintSize="242,22" ProjectName="[item.TeamProjectName]" SpecificBuild="[ApplicationBuild]" SpecificBuildNumber="[AppBuildNumber]" TFSUrl="[TFSUrl]" />
                                  <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[AppBuildDropLocation]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[ApplicationBuild.DropLocation]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;build drop&quot; + AppBuildDropLocation]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="Get Last Successful Build" sap:VirtualizedContainerService.HintSize="220,100">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Will try to get the build of: TFS: {0}, Project: {1}, Build Definition: {2}, Build Number:{3} , builddetail :{4}&quot;, TFSUrl, item.TeamProjectName, item.BuildDefinitionName, AppBuildNumber, BuildDetail.BuildServer.TeamProjectCollection.Uri.ToString())]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                  <ca:GetLastSuccessfulBuild BuildDefinitionName="[item.BuildDefinitionName]" sap:VirtualizedContainerService.HintSize="200,22" LastSuccessfulBuildDropLocation="[AppBuildDropLocation]" LastSuccessfulBuildNumber="[AppBuildNumber]" ProjectName="[item.TeamProjectName]" TFSUrl="[TFSUrl]" />
                                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;build drop&quot; + AppBuildDropLocation]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                </Sequence>
                              </If.Else>
                            </If>
                            <Assign DisplayName="Add to the Build Number List" sap:VirtualizedContainerService.HintSize="242,57">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[BuildNumberList]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[String.Format("{0}#{1}", BuildNumberList, AppBuildNumber)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Sequence DisplayName="Copy drop folder" sap:VirtualizedContainerService.HintSize="242,49">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[System.IO.Directory.Exists(AppBuildDropLocation) And System.IO.Directory.EnumerateFiles(AppBuildDropLocation).Count &gt; 0]" DisplayName="If drop folder exists" sap:VirtualizedContainerService.HintSize="469,309">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="222,208">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Application build drop location is: {0}, Builddroplocation: {1}&quot;, AppBuildDropLocation, BuildDetail.DropLocation)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                    <mtbwa:CopyDirectory Destination="[BuildDetail.DropLocation]" DisplayName="Copy Application Build Assemblies" sap:VirtualizedContainerService.HintSize="200,22" Source="[AppBuildDropLocation]" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="222,208">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TerminateWorkflow Exception="[New Exception(String.Format(&quot;Application Build Drop location is empty: {0}&quot;, AppBuildDropLocation))]" sap:VirtualizedContainerService.HintSize="200,22" Reason="Build directory does not have the assemblies ready" />
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </Sequence>
                        </ActivityAction>
                      </ForEach>
                      <mtbwa:WriteBuildMessage DisplayName="Evaluate Build Numbers" sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;Build Numbers are:&quot; + BuildNumberList]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Unpartitioned Build" sap:VirtualizedContainerService.HintSize="220,100">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Skipping Partitioned Build Part as this will be a Single Build and Deploy Process" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                      <Assign sap:VirtualizedContainerService.HintSize="242,57">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[BuildNumberList]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[BuildDetail.BuildNumber]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
                <Sequence DisplayName="Build and Test" sap:VirtualizedContainerService.HintSize="755,990">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Initialize Variables" sap:VirtualizedContainerService.HintSize="222,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <mtbwa:GetBuildAgent DisplayName="Get the Agent" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[BuildAgent]" />
                    <mtbwa:GetBuildDirectory DisplayName="Get the Build Directory" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[BuildDirectory]" />
                    <Assign x:TypeArguments="x:String" DisplayName="Initialize Workspace Name" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[WorkspaceName]" Value="[String.Format(&quot;{0}_{1}_{2}&quot;, BuildDetail.BuildDefinition.Id, Microsoft.TeamFoundation.LinkingUtilities.DecodeUri(BuildAgent.Uri.AbsoluteUri).ToolSpecificId, BuildAgent.ServiceHost.Name)]" />
                    <Assign x:TypeArguments="x:String" DisplayName="Initialize Sources Directory" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[SourcesDirectory]" Value="[String.Format(&quot;{0}\Sources&quot;, BuildDirectory)]" />
                    <Assign x:TypeArguments="x:String" DisplayName="Initialize Binaries Directory" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[BinariesDirectory]" Value="[String.Format(&quot;{0}\Binaries&quot;, BuildDirectory)]" />
                    <Assign x:TypeArguments="x:String" DisplayName="Initialize TestResults Directory" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[TestResultsDirectory]" Value="[String.Format(&quot;{0}\TestResults&quot;, BuildDirectory)]" />
                    <If Condition="[Not BuildSettings.HasPlatformConfigurations]" DisplayName="If Not BuildSettings.HasPlatformConfigurations" sap:VirtualizedContainerService.HintSize="200,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <AddToCollection x:TypeArguments="mtbwa:PlatformConfiguration" Collection="[BuildSettings.PlatformConfigurations]" DisplayName="Use Default Platform Configuration" sap:VirtualizedContainerService.HintSize="269,100" mtbwt:BuildTrackingParticipant.Importance="Low" Item="[Microsoft.TeamFoundation.Build.Workflow.Activities.PlatformConfiguration.Default]" />
                      </If.Then>
                    </If>
                    <If Condition="[WorkspaceName.Length &gt; Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize]" DisplayName="If WorkspaceName &gt; MaxSize" sap:VirtualizedContainerService.HintSize="200,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="281,208" mtbwt:BuildTrackingParticipant.Importance="None">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <mtbwa:WriteBuildWarning sap:VirtualizedContainerService.HintSize="200,22" Message="[String.Format(&quot;The workspace name '{0}' exceeds the maximum allowed limit of '{1}' characters. Truncating it to match the maximum limit.&quot;, WorkspaceName, Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize)]" />
                          <Assign x:TypeArguments="x:String" DisplayName="Truncate WorkspaceName to MaxSize" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[WorkspaceName]" Value="[WorkspaceName.Substring(0, Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize).TrimEnd()]" />
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                  <Sequence DisplayName="Initialize Workspace" sap:VirtualizedContainerService.HintSize="222,599" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <mtbwa:DeleteDirectory Directory="[TestResultsDirectory]" DisplayName="Delete Test Results Directory" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Normal" Recursive="[True]" />
                    <If Condition="[Not CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.None]" DisplayName="If Not CleanWorkspace = CleanWorkspaceOption.None" sap:VirtualizedContainerService.HintSize="200,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <mtbwa:DeleteDirectory Directory="[BinariesDirectory]" DisplayName="Delete Binaries Directory" sap:VirtualizedContainerService.HintSize="269,100" mtbwt:BuildTrackingParticipant.Importance="Normal" />
                      </If.Then>
                    </If>
                    <If Condition="[CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]" DisplayName="If CleanWorkspace = CleanWorkspaceOption.All" sap:VirtualizedContainerService.HintSize="200,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Delete Workspace and Sources Directory" sap:VirtualizedContainerService.HintSize="281,208" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <mtbwa:DeleteWorkspace DeleteLocalItems="[True]" DisplayName="Delete Workspace" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Normal" Name="[WorkspaceName]" />
                          <mtbwa:DeleteDirectory Directory="[SourcesDirectory]" DisplayName="Delete Sources Directory" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Normal" />
                        </Sequence>
                      </If.Then>
                    </If>
                    <mtbwa:CreateWorkspace BuildDirectory="[BuildDirectory]" Comment="[&quot;Workspace Created by Team Build&quot;]" DisplayName="Create Workspace" sap:VirtualizedContainerService.HintSize="200,22" Name="[WorkspaceName]" Result="[Workspace]" SourcesDirectory="[SourcesDirectory]" />
                    <If Condition="[CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.Outputs]" DisplayName="If CleanWorkspace = CleanWorkspaceOption.Outputs" sap:VirtualizedContainerService.HintSize="200,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <ForEach x:TypeArguments="mtbwa:PlatformConfiguration" DisplayName="For Each Configuration in BuildSettings.PlatformConfigurations" sap:VirtualizedContainerService.HintSize="693,818" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[BuildSettings.PlatformConfigurations]">
                          <ActivityAction x:TypeArguments="mtbwa:PlatformConfiguration">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="mtbwa:PlatformConfiguration" Name="platformConfiguration" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Clean Configuration" sap:VirtualizedContainerService.HintSize="663,715">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[BuildSettings.HasProjectsToBuild]" DisplayName="If BuildSettings.HasProjectsToBuild" sap:VirtualizedContainerService.HintSize="641,591" mtbwt:BuildTrackingParticipant.Importance="Low">
                                <If.Then>
                                  <ForEach x:TypeArguments="x:String" DisplayName="For Each Project in BuildSettings.ProjectsToBuild" sap:VirtualizedContainerService.HintSize="516,490" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[BuildSettings.ProjectsToBuild]">
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="serverBuildProjectItem" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Clean Project" sap:VirtualizedContainerService.HintSize="486,387" mtbwt:BuildTrackingParticipant.Importance="Normal">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="localBuildProjectItem" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Paths to Local Paths" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[serverBuildProjectItem]" Result="[localBuildProjectItem]" Workspace="[Workspace]" />
                                        <If Condition="[System.IO.File.Exists(localBuildProjectItem)]" DisplayName="If File.Exists(Project)" sap:VirtualizedContainerService.HintSize="464,201" mtbwt:BuildTrackingParticipant.Importance="Low">
                                          <If.Then>
                                            <mtbwa:MSBuild CommandLineArguments="[String.Format(&quot;/p:SkipInvalidConfigurations=true {0}&quot;, MSBuildArguments)]" Configuration="[platformConfiguration.Configuration]" DisplayName="Run MSBuild for Project" GenerateVSPropsFile="[True]" sap:VirtualizedContainerService.HintSize="269,100" OutDir="[BinariesDirectory]" Platform="[platformConfiguration.Platform]" Project="[localBuildProjectItem]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" Targets="[New String() { &quot;Clean&quot; }]" TargetsNotLogged="[New String() {&quot;GetNativeManifest&quot;, &quot;GetCopyToOutputDirectoryItems&quot;, &quot;GetTargetPath&quot;}]" ToolPlatform="[MSBuildPlatform]" Verbosity="[Verbosity]" />
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                    </ActivityAction>
                                  </ForEach>
                                </If.Then>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ForEach>
                      </If.Then>
                    </If>
                    <mtbwa:SyncWorkspace DisplayName="Get Workspace" sap:VirtualizedContainerService.HintSize="200,22" NoCIOption="[DisableCIBuild]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" VersionOverride="[GetVersion]" Workspace="[Workspace]" />
                    <tva:VersionAssemblyInfoFiles AssemblyCompanyPattern="[AssemblyCompanyPattern]" AssemblyConfigurationPattern="[AssemblyConfigurationPattern]" AssemblyCopyrightPattern="[AssemblyCopyrightPattern]" AssemblyCulturePattern="[AssemblyCulturePattern]" AssemblyDescriptionPattern="[AssemblyDescriptionPattern]" AssemblyFileVersionPattern="[AssemblyFileVersionPattern]" AssemblyInfoFilePattern="[AssemblyInfoFilePattern]" AssemblyInformationalVersionPattern="[AssemblyInformationalVersionPattern]" AssemblyProductPattern="[AssemblyProductPattern]" AssemblyTitlePattern="[AssemblyTitlePattern]" AssemblyTrademarkPattern="[AssemblyTrademarkPattern]" AssemblyVersionPattern="[AssemblyVersionPattern]" BuildDirectory="[BuildDirectory]" BuildNumberPrefix="[BuildNumberPrefix]" BuildSettings="[BuildSettings]" DisplayName="Versioning Assemblies" DoCheckinAssemblyInfoFiles="[DoCheckinAssemblyInfoFiles]" ForceCreateVersion="[ForceCreateVersion]" sap:VirtualizedContainerService.HintSize="200,22" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" UpdateSqlProjFiles="[VersionSqlProjFiles]" UseVersionSeedFile="[UseVersionSeedFile]" VersionSeedFilePath="[VersionSeedFilePath]" Workspace="[Workspace]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
                          <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </tva:VersionAssemblyInfoFiles>
                  </Sequence>
                  <If Condition="[CreateLabel]" DisplayName="If CreateLabel" sap:VirtualizedContainerService.HintSize="222,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <mtbwa:InvokeForReason DisplayName="Create and Set Label for non-Shelveset Builds" sap:VirtualizedContainerService.HintSize="281,208" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <mtbwa:LabelWorkspace Comment="[&quot;Label Created by Team Build&quot;]" DisplayName="Create Label" sap:VirtualizedContainerService.HintSize="200,22" Name="[LabelName]" Scope="[String.Format(&quot;$/{0}&quot;, BuildDetail.BuildDefinition.TeamProject)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" Workspace="[Workspace]" />
                        <mtbwa:SetBuildProperties DisplayName="Set Label on BuildDetail" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" LabelName="[String.Format(&quot;{0}@$/{1}&quot;, LabelName, BuildDetail.BuildDefinition.TeamProject)]" PropertiesToSet="LabelName" />
                      </mtbwa:InvokeForReason>
                    </If.Then>
                  </If>
                  <TryCatch DisplayName="Try Compile, Test, and Associate Changesets and Work Items" sap:VirtualizedContainerService.HintSize="222,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Finally>
                      <Sequence DisplayName="Revert Workspace and Copy Files to Drop Location" sap:VirtualizedContainerService.HintSize="1910,557" mtbwt:BuildTrackingParticipant.Importance="Low">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <mtbwa:InvokeForReason DisplayName="Revert Workspace for Shelveset Builds" sap:VirtualizedContainerService.HintSize="464,146" Reason="ValidateShelveset, CheckInShelveset">
                          <mtbwa:RevertWorkspace DisplayName="Revert Workspace" sap:VirtualizedContainerService.HintSize="200,22" Workspace="[Workspace]" />
                        </mtbwa:InvokeForReason>
                        <If Condition="[DropBuild AndAlso Not String.IsNullOrEmpty(BuildDetail.DropLocation)]" DisplayName="If DropBuild And DropLocation is Set" sap:VirtualizedContainerService.HintSize="464,247" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Drop Files" sap:VirtualizedContainerService.HintSize="281,146">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <mtbwa:CopyDirectory Destination="[BuildDetail.DropLocation]" DisplayName="Copy Files to Drop Location" sap:VirtualizedContainerService.HintSize="200,22" Source="[BinariesDirectory]" />
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                    </TryCatch.Finally>
                    <TryCatch.Try>
                      <Sequence sap:VirtualizedContainerService.HintSize="400,100" mtbwt:BuildTrackingParticipant.Importance="None">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="s:Exception" Name="compilationException" />
                          <Variable x:TypeArguments="scg:IList(mtvc:Changeset)" Name="associatedChangesets" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Parallel DisplayName="Compile, Test, and Associate Changesets and Work Items" sap:VirtualizedContainerService.HintSize="200,49">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch DisplayName="Try Compile and Test" sap:VirtualizedContainerService.HintSize="200,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Sequence DisplayName="Compile and Test" sap:VirtualizedContainerService.HintSize="400,100">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;PlatformConfigurations:&quot; + BuildSettings.PlatformConfigurations.ToString()]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                <ForEach x:TypeArguments="mtbwa:PlatformConfiguration" DisplayName="For Each Configuration in BuildSettings.PlatformConfigurations" sap:VirtualizedContainerService.HintSize="200,49" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[BuildSettings.PlatformConfigurations]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="mtbwa:PlatformConfiguration">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="mtbwa:PlatformConfiguration" Name="platformConfiguration" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Compile and Test for Configuration" sap:VirtualizedContainerService.HintSize="1200,5314" mtbwt:BuildTrackingParticipant.Importance="Low">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="logFileDropLocation" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence DisplayName="Initialize Variables" sap:VirtualizedContainerService.HintSize="1178,387" mtbwt:BuildTrackingParticipant.Importance="Low">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign x:TypeArguments="x:String" DisplayName="Initialize OutputDirectory" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[outputDirectory]" Value="[If (platformConfiguration.IsEmpty Or BuildSettings.PlatformConfigurations.Count = 1, BinariesDirectory, If (platformConfiguration.IsPlatformEmptyOrAnyCpu, BinariesDirectory + &quot;\&quot; + platformConfiguration.Configuration, BinariesDirectory + &quot;\&quot; + platformConfiguration.Platform + &quot;\&quot; + platformConfiguration.Configuration))]" />
                                        <If Condition="[Not String.IsNullOrEmpty(BuildDetail.DropLocation)]" DisplayName="If DropLocation is Set" sap:VirtualizedContainerService.HintSize="464,201" mtbwt:BuildTrackingParticipant.Importance="Low">
                                          <If.Then>
                                            <Assign x:TypeArguments="x:String" DisplayName="Initialize LogFile Drop Location" sap:VirtualizedContainerService.HintSize="269,100" mtbwt:BuildTrackingParticipant.Importance="Low" To="[logFileDropLocation]" Value="[If (platformConfiguration.IsEmpty Or BuildSettings.PlatformConfigurations.Count = 1, BuildDetail.DropLocation + &quot;\logs&quot;, If (platformConfiguration.IsPlatformEmptyOrAnyCpu, BuildDetail.DropLocation + &quot;\logs\&quot; + platformConfiguration.Configuration, BuildDetail.DropLocation + &quot;\logs\&quot; + platformConfiguration.Platform + &quot;\&quot; + platformConfiguration.Configuration))]" />
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                      <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="1178,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;PRojectsToBuild:&quot; + BuildSettings.ProjectsToBuild.ToString()]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                      <If Condition="[BuildSettings.HasProjectsToBuild]" DisplayName="If BuildSettings.HasProjectsToBuild" sap:VirtualizedContainerService.HintSize="1178,1324" mtbwt:BuildTrackingParticipant.Importance="Low">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <ForEach x:TypeArguments="x:String" DisplayName="For Each Project in BuildSettings.ProjectsToBuild" sap:VirtualizedContainerService.HintSize="558,1223" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[BuildSettings.ProjectsToBuild]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="x:String">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="x:String" Name="serverBuildProjectItem" />
                                              </ActivityAction.Argument>
                                              <Sequence sap:VirtualizedContainerService.HintSize="528,1120">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <TryCatch DisplayName="Try to Compile the Project" sap:VirtualizedContainerService.HintSize="506,996" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <TryCatch.Try>
                                                    <Sequence DisplayName="Compile the Project" sap:VirtualizedContainerService.HintSize="488,208" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                      <Sequence.Variables>
                                                        <Variable x:TypeArguments="x:String" Name="localProject" />
                                                      </Sequence.Variables>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[serverBuildProjectItem]" Result="[localProject]" Workspace="[Workspace]" />
                                                      <mtbwa:MSBuild CommandLineArguments="[String.Format(&quot;/p:SkipInvalidConfigurations=true {0}&quot;, MSBuildArguments)]" Configuration="[platformConfiguration.Configuration]" DisplayName="Run MSBuild for Project" GenerateVSPropsFile="[True]" sap:VirtualizedContainerService.HintSize="200,22" LogFileDropLocation="[logFileDropLocation]" OutDir="[outputDirectory]" Platform="[platformConfiguration.Platform]" Project="[localProject]" RunCodeAnalysis="[RunCodeAnalysis]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" TargetsNotLogged="[New String() {&quot;GetNativeManifest&quot;, &quot;GetCopyToOutputDirectoryItems&quot;, &quot;GetTargetPath&quot;}]" ToolPath="[MSBuildToolsPath]" ToolPlatform="[MSBuildPlatform]" Verbosity="[Verbosity]" />
                                                    </Sequence>
                                                  </TryCatch.Try>
                                                  <TryCatch.Catches>
                                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="492,526">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="ex" />
                                                        </ActivityAction.Argument>
                                                        <Sequence DisplayName="Handle Exception" sap:VirtualizedContainerService.HintSize="486,495">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <mtbwa:SetBuildProperties CompilationStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" DisplayName="Set CompilationStatus to Failed" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="CompilationStatus" />
                                                          <If Condition="[CreateWorkItem]" DisplayName="If CreateWorkItem" sap:VirtualizedContainerService.HintSize="464,247" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                            <If.Then>
                                                              <mtbwa:InvokeForReason DisplayName="Create Work Item for non-Shelveset Builds" sap:VirtualizedContainerService.HintSize="281,146" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
                                                                <mtbwa:OpenWorkItem AssignedTo="[BuildDetail.RequestedFor]" Comment="[&quot;This work item was created by TFS Build on a build failure.&quot;]" CustomFields="[New Dictionary(Of String, String) From { {&quot;System.Reason&quot;, &quot;Build Failure&quot;}, {&quot;Microsoft.VSTS.TCM.ReproSteps&quot;, &quot;Start the build using TFS Build&quot;}, {&quot;Priority&quot;, &quot;1&quot;}, {&quot;Severity&quot;, &quot;1 - Critical&quot;} }]" DisplayName="Create Work Item" sap:VirtualizedContainerService.HintSize="200,22" Title="[String.Format(&quot;Build Failure in Build: {0}&quot;, BuildDetail.BuildNumber)]" Type="[&quot;Bug&quot;]" />
                                                              </mtbwa:InvokeForReason>
                                                            </If.Then>
                                                          </If>
                                                          <Rethrow DisplayName="Rethrow the exception so the build will stop" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" />
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </Catch>
                                                  </TryCatch.Catches>
                                                </TryCatch>
                                              </Sequence>
                                            </ActivityAction>
                                          </ForEach>
                                        </If.Then>
                                      </If>
                                      <Sequence DisplayName="Post Build Tasks" sap:VirtualizedContainerService.HintSize="1178,1188">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="PostBuildScriptLocal" />
                                          <Variable x:TypeArguments="x:String" Name="PostBuildScriptParametersHydrated" />
                                          <Variable x:TypeArguments="x:String" Name="PostBuildScriptLogFile" />
                                          <Variable x:TypeArguments="x:Int32" Name="PostBuildScriptResult" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If Condition="[Not String.IsNullOrEmpty(PostBuildScript) And EnablePostBuildScript]" DisplayName="If Not String.IsNullOrEmpty(PostBuildScript)" sap:VirtualizedContainerService.HintSize="611,1064">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="486,963">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <mtbwa:ConvertWorkspaceItem DisplayName="PostBuildScript ToLocal" sap:VirtualizedContainerService.HintSize="464,22" Input="[PostBuildScript]" Result="[PostBuildScriptLocal]" Workspace="[Workspace]" />
                                              <Assign DisplayName="Log File" sap:VirtualizedContainerService.HintSize="464,57">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[PostBuildScriptLogFile]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[String.Format("{0}\logs\PostBuildTasks.log", BuildDetail.DropLocation)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Script Parameters" sap:VirtualizedContainerService.HintSize="464,57">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[PostBuildScriptParametersHydrated]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[Replace(Replace(Replace(Replace(PostBuildScriptParameters, "$BinariesDirectory", BinariesDirectory), "$DeploymentBuildNumber", BuildDetail.BuildNumber), "$CIBuildNumber", AppBuildNumber), "$DropFolder", BuildDetail.DropLocation)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="464,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Modified post build script parameter.Before: {0} After: {1} &quot;, PostBuildScriptParameters, PostBuildScriptParametersHydrated)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                              <mtbwa:InvokeProcess Arguments="[String.Format(&quot; &quot;&quot;&amp; '{0}' &quot;&quot; {1} 2&gt;&amp;1&gt; &quot;&quot;{2}&quot;&quot;&quot;, PostBuildScriptLocal, PostBuildScriptParametersHydrated, PostBuildScriptLogFile)]" FileName="Powershell" sap:VirtualizedContainerService.HintSize="464,172" Result="[PostBuildScriptResult]">
                                                <mtbwa:InvokeProcess.ErrorDataReceived>
                                                  <ActivityAction x:TypeArguments="x:String">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                                                    </ActivityAction.Argument>
                                                  </ActivityAction>
                                                </mtbwa:InvokeProcess.ErrorDataReceived>
                                                <mtbwa:InvokeProcess.OutputDataReceived>
                                                  <ActivityAction x:TypeArguments="x:String">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                                                    </ActivityAction.Argument>
                                                  </ActivityAction>
                                                </mtbwa:InvokeProcess.OutputDataReceived>
                                              </mtbwa:InvokeProcess>
                                              <If Condition="[PostBuildScriptResult = 0]" sap:VirtualizedContainerService.HintSize="464,309">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="209,208" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;PostBuildScript completed succesfully, see log file at {0} (requires build to output to a drop folder&quot;, PostBuildScriptLogFile)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="230,208">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <mtbwa:SetBuildProperties DisplayName="Set Status to Partially Suceeded" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="Status" Status="[Microsoft.TeamFoundation.Build.Client.BuildStatus.PartiallySucceeded]" />
                                                    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;PostBuildScript failed, see log file at {0} (requires build to output to a drop folder&quot;, PostBuildScriptLogFile)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                      <If Condition="[Not DisableTests]" DisplayName="If Not DisableTests" sap:VirtualizedContainerService.HintSize="1178,2109" mtbwt:BuildTrackingParticipant.Importance="Low">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence DisplayName="Run Tests" sap:VirtualizedContainerService.HintSize="1053,2008" mtbwt:BuildTrackingParticipant.Importance="Low">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[Not TestSpecs Is Nothing]" DisplayName="If Not TestSpecs Is Nothing" sap:VirtualizedContainerService.HintSize="1031,1884" mtbwt:BuildTrackingParticipant.Importance="Low">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <ForEach x:TypeArguments="mtbwa:TestSpec" DisplayName="For Each TestSpec in TestSpecs" sap:VirtualizedContainerService.HintSize="906,1783" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[TestSpecs]">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ActivityAction x:TypeArguments="mtbwa:TestSpec">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="mtbwa:TestSpec" Name="spec" />
                                                    </ActivityAction.Argument>
                                                    <TryCatch DisplayName="Try Run Tests" sap:VirtualizedContainerService.HintSize="876,1680" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <TryCatch.Try>
                                                        <If Condition="[TypeOf spec Is Microsoft.TeamFoundation.Build.Workflow.Activities.TestMetadataFileSpec]" DisplayName="If spec Is TestMetadataFileSpec" sap:VirtualizedContainerService.HintSize="858,759" mtbwt:BuildTrackingParticipant.Importance="None">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <If.Then>
                                                            <Sequence DisplayName="Run MSTest for Metadata File" sap:VirtualizedContainerService.HintSize="222,658">
                                                              <Sequence.Variables>
                                                                <Variable x:TypeArguments="mtbwa:TestMetadataFileSpec" Name="testMetadataFile" />
                                                                <Variable x:TypeArguments="x:String" Name="localTestMetadata" />
                                                              </Sequence.Variables>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign x:TypeArguments="mtbwa:TestMetadataFileSpec" DisplayName="Assign spec to testMetadataFile" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[testMetadataFile]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestMetadataFileSpec)]" />
                                                              <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[testMetadataFile.MetadataFileName]" Result="[localTestMetadata]" Workspace="[Workspace]" />
                                                              <mtbwa:MSTest Category="[testMetadataFile.CategoryFilter]" CommandLineArguments="[testMetadataFile.MSTestCommandLineArgs]" DisplayName="Run MSTest for Metadata File" Flavor="[platformConfiguration.Configuration]" sap:VirtualizedContainerService.HintSize="200,22" MaxPriority="[testMetadataFile.MaximumPriority]" MinPriority="[testMetadataFile.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[platformConfiguration.Platform]" SearchPathRoot="[outputDirectory]" TestLists="[testMetadataFile.TestLists]" TestMetadata="[localTestMetadata]" TestSettings="[String.Empty]" ToolPath="[MSTestToolsPath]" />
                                                            </Sequence>
                                                          </If.Then>
                                                          <If.Else>
                                                            <Sequence DisplayName="Run MSTest for Test Assemblies" sap:VirtualizedContainerService.HintSize="611,658" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                              <Sequence.Variables>
                                                                <Variable x:TypeArguments="mtbwa:TestAssemblySpec" Name="testAssembly" />
                                                                <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="testAssemblies" />
                                                                <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="testFlavor" />
                                                                <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="testPlatform" />
                                                              </Sequence.Variables>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign x:TypeArguments="mtbwa:TestAssemblySpec" DisplayName="Assign spec to testAssembly" sap:VirtualizedContainerService.HintSize="589,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[testAssembly]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestAssemblySpec)]" />
                                                              <mtbwa:FindMatchingFiles DisplayName="Find Test Assemblies" sap:VirtualizedContainerService.HintSize="589,22" mtbwt:BuildTrackingParticipant.Importance="Low" MatchPattern="[String.Format(&quot;{0}\{1}&quot;, outputDirectory, testAssembly.AssemblyFileSpec)]" Result="[testAssemblies]" />
                                                              <If Condition="[testAssemblies.Count() &gt; 0]" DisplayName="If Test Assemblies Found" sap:VirtualizedContainerService.HintSize="589,410" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <If.Then>
                                                                  <If Condition="[testAssembly.HasTestSettingsFile]" DisplayName="If testAssembly.HasTestSettingsFile" sap:VirtualizedContainerService.HintSize="464,309" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <If.Then>
                                                                      <Sequence DisplayName="Find Test Settings File And Run MSTest" sap:VirtualizedContainerService.HintSize="231,208" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                                        <Sequence.Variables>
                                                                          <Variable x:TypeArguments="x:String" Name="localTestSettings" />
                                                                        </Sequence.Variables>
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[testAssembly.TestSettingsFileName]" Result="[localTestSettings]" Workspace="[Workspace]" />
                                                                        <mtbwa:MSTest Category="[testAssembly.CategoryFilter]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]" DisplayName="Run MSTest for Test Assemblies" Flavor="[platformConfiguration.Configuration]" sap:VirtualizedContainerService.HintSize="200,22" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[platformConfiguration.Platform]" SearchPathRoot="[outputDirectory]" TestContainers="[testAssemblies]" TestSettings="[localTestSettings]" ToolPath="[MSTestToolsPath]" />
                                                                      </Sequence>
                                                                    </If.Then>
                                                                    <If.Else>
                                                                      <mtbwa:MSTest Category="[testAssembly.CategoryFilter]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]" DisplayName="Run MSTest for Test Assemblies" Flavor="[platformConfiguration.Configuration]" sap:VirtualizedContainerService.HintSize="208,208" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[platformConfiguration.Platform]" SearchPathRoot="[outputDirectory]" TestContainers="[testAssemblies]" ToolPath="[MSTestToolsPath]" />
                                                                    </If.Else>
                                                                  </If>
                                                                </If.Then>
                                                              </If>
                                                            </Sequence>
                                                          </If.Else>
                                                        </If>
                                                      </TryCatch.Try>
                                                      <TryCatch.Catches>
                                                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="862,659">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ActivityAction x:TypeArguments="s:Exception">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="s:Exception" Name="testException" />
                                                            </ActivityAction.Argument>
                                                            <Sequence DisplayName="Handle MSTest Exception" sap:VirtualizedContainerService.HintSize="856,628">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <If Condition="[Not (TypeOf testException Is Microsoft.TeamFoundation.Build.Workflow.Activities.TestFailureException)]" DisplayName="If testException is NOT TestFailureException" sap:VirtualizedContainerService.HintSize="464,201" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                                <If.Then>
                                                                  <mtbwa:WriteBuildError DisplayName="Write Test Failure Exception message" sap:VirtualizedContainerService.HintSize="269,100" Message="[testException.Message]" />
                                                                </If.Then>
                                                              </If>
                                                              <mtbwa:SetBuildProperties DisplayName="Set TestStatus to Failed" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" />
                                                              <If Condition="[spec.FailBuildOnFailure]" DisplayName="If spec.FailBuildOnFailure" sap:VirtualizedContainerService.HintSize="464,201" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                                <If.Then>
                                                                  <Assign x:TypeArguments="x:Boolean" DisplayName="Set treatTestFailureAsBuildFailure to True" sap:VirtualizedContainerService.HintSize="269,100" mtbwt:BuildTrackingParticipant.Importance="Low" To="[treatTestFailureAsBuildFailure]" Value="[True]" />
                                                                </If.Then>
                                                              </If>
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </Catch>
                                                      </TryCatch.Catches>
                                                    </TryCatch>
                                                  </ActivityAction>
                                                </ForEach>
                                              </If.Then>
                                            </If>
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ForEach>
                                <If Condition="[BuildDetail.CompilationStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Unknown]" DisplayName="If CompilationStatus = Unknown" sap:VirtualizedContainerService.HintSize="200,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <mtbwa:SetBuildProperties CompilationStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded]" DisplayName="Set CompilationStatus to Succeeded" sap:VirtualizedContainerService.HintSize="269,100" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="CompilationStatus" />
                                  </If.Then>
                                </If>
                                <If Condition="[BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Unknown]" DisplayName="If TestStatus = Unknown" sap:VirtualizedContainerService.HintSize="200,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <mtbwa:SetBuildProperties DisplayName="Set TestStatus to Succeeded" sap:VirtualizedContainerService.HintSize="269,100" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded]" />
                                  </If.Then>
                                </If>
                                <If Condition="[treatTestFailureAsBuildFailure And (BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed)]" DisplayName="If TreatTestFailureAsBuildFailure And (TestStatus = Failed)" sap:VirtualizedContainerService.HintSize="200,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                                  <If.Then>
                                    <mtbwa:SetBuildProperties DisplayName="Set Status to Failed" sap:VirtualizedContainerService.HintSize="269,100" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="Status" Status="[Microsoft.TeamFoundation.Build.Client.BuildStatus.Failed]" />
                                  </If.Then>
                                </If>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,20">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="compilationExceptionArgument" />
                                  </ActivityAction.Argument>
                                  <Assign x:TypeArguments="s:Exception" DisplayName="Save the Compilation Exception" sap:VirtualizedContainerService.HintSize="558,75" mtbwt:BuildTrackingParticipant.Importance="None" To="[compilationException]" Value="[compilationExceptionArgument]" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <If Condition="[AssociateChangesetsAndWorkItems]" DisplayName="If AssociateChangesetsAndWorkItems" sap:VirtualizedContainerService.HintSize="200,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                            <If.Then>
                              <mtbwa:InvokeForReason DisplayName="Associate Changesets and Work Items for non-Shelveset Builds" sap:VirtualizedContainerService.HintSize="281,146" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
                                <mtbwa:AssociateChangesetsAndWorkItems DisplayName="Associate Changesets and Work Items" sap:VirtualizedContainerService.HintSize="200,22" Result="[associatedChangesets]" />
                              </mtbwa:InvokeForReason>
                            </If.Then>
                          </If>
                        </Parallel>
                        <If Condition="[Not compilationException Is Nothing]" DisplayName="If a Compilation Exception Occurred" sap:VirtualizedContainerService.HintSize="200,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Throw DisplayName="Rethrow Compilation Exception" Exception="[compilationException]" sap:VirtualizedContainerService.HintSize="269,100" mtbwt:BuildTrackingParticipant.Importance="Low" />
                          </If.Then>
                        </If>
                        <Parallel DisplayName="Get Impacted Tests, Index Sources and Publish Symbols" sap:VirtualizedContainerService.HintSize="200,49">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[PerformTestImpactAnalysis]" DisplayName="If PerformTestImpactAnalysis" sap:VirtualizedContainerService.HintSize="200,1511" mtbwt:BuildTrackingParticipant.Importance="Low">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Get Impacted Tests" sap:VirtualizedContainerService.HintSize="281,208" mtbwt:BuildTrackingParticipant.Importance="Low">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="assemblies" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <mtbwa:FindMatchingFiles DisplayName="Find Build Outputs" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" MatchPattern="[String.Format(&quot;{0}\**\*.dll;{0}\**\*.exe&quot;, BinariesDirectory)]" Result="[assemblies]" />
                                <mttbb:GetImpactedTests BaselineBuildDropLocation="{x:Null}" CodeChanges="{x:Null}" ImpactedTests="{x:Null}" Assemblies="[assemblies]" AssociatedChangesets="[associatedChangesets]" BinariesRoot="[BinariesDirectory]" Build="[BuildDetail]" DisplayName="Get Impacted Tests" sap:VirtualizedContainerService.HintSize="200,22" Workspace="[Workspace]" />
                              </Sequence>
                            </If.Then>
                          </If>
                          <If Condition="[SourceAndSymbolServerSettings.IndexSources Or SourceAndSymbolServerSettings.HasSymbolStorePath]" DisplayName="If SourceAndSymbolServerSettings.IndexSources Or SourceAndSymbolServerSettings.HasSymbolStorePath" sap:VirtualizedContainerService.HintSize="690,1511" mtbwt:BuildTrackingParticipant.Importance="Low">
                            <If.Then>
                              <mtbwa:InvokeForReason DisplayName="Index Sources and Publish Symbols for Triggered Builds" sap:VirtualizedContainerService.HintSize="565,1410" Reason="Triggered">
                                <mtbwa:InvokeForReason.Variables>
                                  <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="symbolFiles" />
                                </mtbwa:InvokeForReason.Variables>
                                <mtbwa:FindMatchingFiles DisplayName="Find Symbol Files" sap:VirtualizedContainerService.HintSize="543,22" mtbwt:BuildTrackingParticipant.Importance="Low" MatchPattern="[String.Format(&quot;{0}\**\*.pdb&quot;, BinariesDirectory)]" Result="[symbolFiles]" />
                                <If Condition="[SourceAndSymbolServerSettings.IndexSources]" DisplayName="If SourceAndSymbolServerSettings.IndexSources" sap:VirtualizedContainerService.HintSize="543,569" mtbwt:BuildTrackingParticipant.Importance="Low">
                                  <If.Then>
                                    <TryCatch DisplayName="Try Index Sources" sap:VirtualizedContainerService.HintSize="418,468" mtbwt:BuildTrackingParticipant.Importance="Low">
                                      <TryCatch.Try>
                                        <mtbwa:IndexSources DisplayName="Index Sources" FileList="[symbolFiles]" sap:VirtualizedContainerService.HintSize="400,100" />
                                      </TryCatch.Try>
                                      <TryCatch.Catches>
                                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,106">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ActivityAction x:TypeArguments="s:Exception">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                            </ActivityAction.Argument>
                                            <mtbwa:WriteBuildError sap:VirtualizedContainerService.HintSize="398,75" Message="[exception.Message]" />
                                          </ActivityAction>
                                        </Catch>
                                      </TryCatch.Catches>
                                    </TryCatch>
                                  </If.Then>
                                </If>
                                <If Condition="[SourceAndSymbolServerSettings.HasSymbolStorePath]" DisplayName="If SourceAndSymbolServerSettings.HasSymbolStorePath" sap:VirtualizedContainerService.HintSize="543,615" mtbwt:BuildTrackingParticipant.Importance="Low">
                                  <If.Then>
                                    <TryCatch DisplayName="Try Publish Symbols" sap:VirtualizedContainerService.HintSize="418,514" mtbwt:BuildTrackingParticipant.Importance="Low">
                                      <TryCatch.Try>
                                        <mtbwa:SharedResourceScope DisplayName="Synchronize Access to Symbol Store" sap:VirtualizedContainerService.HintSize="400,146" mtbwt:BuildTrackingParticipant.Importance="Low" MaxExecutionTime="[TimeSpan.Zero]" MaxWaitTime="[New TimeSpan(1, 0, 0)]" ResourceName="[SourceAndSymbolServerSettings.SymbolStorePath]">
                                          <mtbwa:PublishSymbols DisplayName="Publish Symbols" FileList="[symbolFiles]" sap:VirtualizedContainerService.HintSize="200,22" ProductName="[BuildDetail.BuildDefinition.Name]" StorePath="[SourceAndSymbolServerSettings.SymbolStorePath]" Version="[BuildDetail.BuildNumber]" />
                                        </mtbwa:SharedResourceScope>
                                      </TryCatch.Try>
                                      <TryCatch.Catches>
                                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,106">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ActivityAction x:TypeArguments="s:Exception">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                            </ActivityAction.Argument>
                                            <mtbwa:WriteBuildError sap:VirtualizedContainerService.HintSize="398,75" Message="[exception.Message]" />
                                          </ActivityAction>
                                        </Catch>
                                      </TryCatch.Catches>
                                    </TryCatch>
                                  </If.Then>
                                </If>
                              </mtbwa:InvokeForReason>
                            </If.Then>
                          </If>
                        </Parallel>
                      </Sequence>
                    </TryCatch.Try>
                  </TryCatch>
                </Sequence>
                <Sequence DisplayName="Prerequsite Checks" sap:VirtualizedContainerService.HintSize="755,49">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Check deployment script exists" sap:VirtualizedContainerService.HintSize="486,387">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <mtbwa:ConvertWorkspaceItem DisplayName="Get deployment script local path" sap:VirtualizedContainerService.HintSize="464,22" Input="[DeploymentScript]" Result="[DeploymentScriptFilename]" Workspace="[Workspace]" />
                    <If Condition="[Not DisableDeployment And Not File.Exists(DeploymentScriptFilename)]" DisplayName="If Not DisableDeployment And  Not File.Exists(DeploymentScriptFilename)" sap:VirtualizedContainerService.HintSize="464,201">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Throw Exception="[New ArgumentException(String.Format(&quot;{0} does not exist&quot;, DeploymentScriptFilename))]" sap:VirtualizedContainerService.HintSize="269,100" />
                      </If.Then>
                    </If>
                  </Sequence>
                </Sequence>
                <If Condition="[Not DisablePackageValidation Or Not DisablePackaging Or Not DisableDeployment]" DisplayName="Do Package Validation [If PackageValidate or Packaging or Deployment Enabled]" sap:VirtualizedContainerService.HintSize="755,1328">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Pre Deployment Validation" sap:VirtualizedContainerService.HintSize="486,1227">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[Not String.IsNullOrEmpty(DeploymentScript) And Not DeploymentScriptParameters Is Nothing]" DisplayName="If Deployment Parameters Defined" sap:VirtualizedContainerService.HintSize="464,1014">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ForEach x:TypeArguments="x:String" DisplayName="ForEach&lt;String&gt;" sap:VirtualizedContainerService.HintSize="317,913" Values="[DeploymentScriptParameters]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                              </ActivityAction.Argument>
                              <Sequence sap:VirtualizedContainerService.HintSize="264,810">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <mtbwa:ConvertWorkspaceItem DisplayName="ConvertWorkspaceItem Deployment Script" sap:VirtualizedContainerService.HintSize="242,22" Input="[DeploymentScript]" Result="[DeploymentScriptFilename]" Workspace="[Workspace]" />
                                <ca:GetCommandLineParameter CommandLine="[item]" sap:VirtualizedContainerService.HintSize="242,22" ParameterName="-RigRelativePath" Result="[DeploymentConfigFilename]" />
                                <ca:GetCommandLineParameter CommandLine="[item]" sap:VirtualizedContainerService.HintSize="242,22" ParameterName="-Groups" Result="[Groups]" />
                                <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[DeploymentConfigFilename]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[Path.Combine(Path.GetDirectoryName(DeploymentScriptFilename), DeploymentConfigFilename)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Starting validation of file {0}&quot;, DeploymentConfigFilename)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]" Message="[String.Format(&quot;Debug strings {0} *** {1} *** {2} *** {3}&quot;,&#xA;              DeploymentScriptFilename,&#xA;              item,&#xA;              Path.GetDirectoryName(DeploymentScriptFilename),&#xA;              item.Substring(item.IndexOf(&quot;-RigRelativePath&quot;, StringComparison.CurrentCultureIgnoreCase) + 16).Trim().Substring(1).Substring(&#xA;                0,&#xA;                item.Substring(item.IndexOf(&quot;-RigRelativePath&quot;, StringComparison.CurrentCultureIgnoreCase) + 16).Trim().Substring(1).IndexOf(&quot;'&quot;)))]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                <mtbwa:InvokeProcess Arguments="[String.Format(&quot;-Type 'Pre' -BuildLocation '{0}' -ConfigFile '{1}' -Groups '{2}'&quot;, BuildDetail.DropLocation, DeploymentConfigFilename, Groups)]" DisplayName="Do Pre Validation" FileName="[Path.Combine(BuildDirectory, &quot;Binaries&quot;, &quot;DeploymentTool.exe&quot;)]" sap:VirtualizedContainerService.HintSize="242,190" Result="[IsValid]">
                                  <mtbwa:InvokeProcess.ErrorDataReceived>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                                      </ActivityAction.Argument>
                                      <mtbwa:WriteBuildError sap:VirtualizedContainerService.HintSize="200,22" Message="[errOutput]" />
                                    </ActivityAction>
                                  </mtbwa:InvokeProcess.ErrorDataReceived>
                                  <mtbwa:InvokeProcess.OutputDataReceived>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                                      </ActivityAction.Argument>
                                      <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[stdOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                    </ActivityAction>
                                  </mtbwa:InvokeProcess.OutputDataReceived>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </mtbwa:InvokeProcess>
                                <If Condition="[IsValid = 0]" sap:VirtualizedContainerService.HintSize="242,49">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="219,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Deployment file {0} passed validation&quot;, DeploymentConfigFilename)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="220,100">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <mtbwa:WriteBuildError sap:VirtualizedContainerService.HintSize="242,22" Message="[String.Format(&quot;Deployment file {0} failed validation&quot;, DeploymentConfigFilename)]" />
                                      <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[ValidPackages]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ForEach>
                        </If.Then>
                      </If>
                      <If Condition="[ValidPackages]" sap:VirtualizedContainerService.HintSize="464,49">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="209,208" Message="All packages have been validated." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="230,208">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <mtbwa:SetBuildProperties DisplayName="Set Status to Failed" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="Status" Status="[Microsoft.TeamFoundation.Build.Client.BuildStatus.Failed]" />
                            <Throw Exception="[New Exception(&quot;Failed to validate all packages. See Build log for details.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" />
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,1227" Message="Skipping Package Validation" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                  </If.Else>
                </If>
                <If Condition="[Not DisablePackaging Or Not DisableDeployment]" DisplayName="Do Packaging [If Packaging or Deployment Enabled]" sap:VirtualizedContainerService.HintSize="755,49">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="508,1324">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Create Package" sap:VirtualizedContainerService.HintSize="486,1200">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="PackageName" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[Not String.IsNullOrEmpty(DeploymentScript) And Not DeploymentScriptParameters Is Nothing]" DisplayName="If parameters defined" sap:VirtualizedContainerService.HintSize="464,1076">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ForEach x:TypeArguments="x:String" DisplayName="ForEach&lt;String&gt;" sap:VirtualizedContainerService.HintSize="317,975" Values="[DeploymentScriptParameters]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="x:String">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="264,872">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ca:GetCommandLineParameter CommandLine="[item]" DisplayName="Get config file name" sap:VirtualizedContainerService.HintSize="242,22" ParameterName="-RigRelativePath" Result="[DeploymentConfigFilename]" />
                                  <ca:GetCommandLineParameter CommandLine="[item]" DisplayName="Get package name" sap:VirtualizedContainerService.HintSize="242,22" ParameterName="-PackageName" Result="[PackageName]" />
                                  <ca:GetCommandLineParameter CommandLine="[item]" DisplayName="Get Groups" sap:VirtualizedContainerService.HintSize="242,22" ParameterName="-Groups" Result="[Groups]" />
                                  <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[PackageName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Replace(Replace(PackageName, "$CIBuildNumber", AppBuildNumber),"$DeploymentBuildNumber", BuildDetail.BuildNumber)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Modified PackageName {0} &quot;, PackageName)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                  <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[DeploymentConfigFilename]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Path.Combine(Path.GetDirectoryName(DeploymentScriptFilename), DeploymentConfigFilename)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <mtbwa:InvokeProcess Arguments="[String.Format(&quot;-Type 'Package' -BuildLocation '{0}' -ConfigFile '{1}' -PackageName '{2}' -Groups '{3}'&quot;, BuildDetail.DropLocation, DeploymentConfigFilename, PackageName, Groups)]" DisplayName="Create Package" FileName="[Path.Combine(BuildDirectory, &quot;Binaries&quot;, &quot;DeploymentTool.exe&quot;)]" sap:VirtualizedContainerService.HintSize="242,217" Result="[IsValid]">
                                    <mtbwa:InvokeProcess.ErrorDataReceived>
                                      <ActivityAction x:TypeArguments="x:String">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                                        </ActivityAction.Argument>
                                        <Sequence sap:VirtualizedContainerService.HintSize="200,49">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Assign Create Package Failure Error" sap:VirtualizedContainerService.HintSize="242,57">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[FailedMessage]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[errOutput]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ActivityAction>
                                    </mtbwa:InvokeProcess.ErrorDataReceived>
                                    <mtbwa:InvokeProcess.OutputDataReceived>
                                      <ActivityAction x:TypeArguments="x:String">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                                        </ActivityAction.Argument>
                                        <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[stdOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                      </ActivityAction>
                                    </mtbwa:InvokeProcess.OutputDataReceived>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </mtbwa:InvokeProcess>
                                  <If Condition="[IsValid = 0]" sap:VirtualizedContainerService.HintSize="242,49">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="222,270">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <mtbwa:SetBuildProperties DisplayName="Set Status to Failed" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="Status" Status="[Microsoft.TeamFoundation.Build.Client.BuildStatus.Failed]" />
                                        <Throw Exception="[New Exception(String.Format(&quot;Unable to create package from config file '{0}'. Error message is :{1}&quot;, DeploymentConfigFilename, FailedMessage))]" sap:VirtualizedContainerService.HintSize="200,22" />
                                        <TerminateWorkflow Exception="[New Exception(String.Format(&quot;Unable to create package from config file '{0}'&quot;, DeploymentConfigFilename))]" sap:VirtualizedContainerService.HintSize="200,22" Reason="Packaging Failed" />
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ForEach>
                          </If.Then>
                        </If>
                      </Sequence>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,1324" Message="Skipping Packaging" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                  </If.Else>
                </If>
                <If Condition="[Not DisableDeployment]" DisplayName="Do Deployment [If Deployment is Enabled]" sap:VirtualizedContainerService.HintSize="755,49">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="219,100">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Environment Section" sap:VirtualizedContainerService.HintSize="200,49">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[Not String.IsNullOrEmpty(LabManagerScriptLocation) And Not DeploymentPlatform = DeploymentPlatform.CurrentDomain]" DisplayName="If Environment Script Location Specified and not working in current domain " sap:VirtualizedContainerService.HintSize="464,201">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Execute Virtual Platform Section" sap:VirtualizedContainerService.HintSize="495,910">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="DeploymentScriptParametersHydrated" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="473,57">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[IsValid]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </Assign.Value>
                              </Assign>
                              <mtbwa:ConvertWorkspaceItem DisplayName="ConvertWorkspaceItem Deployment Script" sap:VirtualizedContainerService.HintSize="473,22" Input="[LabManagerScriptLocation]" Result="[LabManagerScriptLocalLocation]" Workspace="[Workspace]" />
                              <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="473,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Environment Action Selected: {0}&quot;, LabManagerAction.ToString())]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                              <If Condition="[String.IsNullOrEmpty(AppBuildNumber)]" DisplayName="If AppBuildNumber is not Assigned Yet" sap:VirtualizedContainerService.HintSize="473,49">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="Assign AppBuildNumber" sap:VirtualizedContainerService.HintSize="301,243">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[AppBuildNumber]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[BuildDetail.BuildNumber]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;Setting AppBuildNumber: &quot; + AppBuildNumber]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                  </Sequence>
                                </If.Then>
                              </If>
                              <Switch x:TypeArguments="cc:LabManagerAction" Expression="[LabManagerAction]" sap:VirtualizedContainerService.HintSize="473,1069">
                                <Switch.Default>
                                  <Throw Exception="[New ApplicationException(String.Format(&quot;Lab manger action '{0}' unrecognised&quot;, LabManagerAction.ToString()))]" sap:VirtualizedContainerService.HintSize="533,100" />
                                </Switch.Default>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence x:Key="CreateRig" sap:VirtualizedContainerService.HintSize="453,871">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[LabManagerTryRefreshRig]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">[False]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Creating Rig" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                  <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[LabManagerScriptFilename]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Path.Combine(LabManagerScriptLocalLocation, DeployRigScript)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;Parameters:&quot; + LabManagerRigName + &quot; AppBuildNumber:&quot; + AppBuildNumber + &quot; |Result:&quot; + Replace(Replace(LabManagerRigName, &quot;$CIBuildNumber&quot;, AppBuildNumber), &quot;$DeploymentBuildNumber&quot;, BuildDetail.BuildNumber)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                  <Assign DisplayName="Hydrate parameters" sap:VirtualizedContainerService.HintSize="242,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[LabManagerRigName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Replace(Replace(LabManagerRigName, "$CIBuildNumber", AppBuildNumber), "$DeploymentBuildNumber", BuildDetail.BuildNumber)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If Condition="[DeploymentPlatform = CustomBuildActivities.Enum.DeploymentPlatform.LabManager]" sap:VirtualizedContainerService.HintSize="242,49">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Assign sap:VirtualizedContainerService.HintSize="242,100">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[LabManagerScriptParameters]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[String.Format("-LibraryConfigName '{0}' -RigName '{1}'", LabManagerLibraryConfigName, LabManagerRigName)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                    <If.Else>
                                      <Assign sap:VirtualizedContainerService.HintSize="242,100">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[LabManagerScriptParameters]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[String.Format("-vAppTemplateName '{0}' -vAppName '{1}'", LabManagerLibraryConfigName, LabManagerRigName)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Else>
                                  </If>
                                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;LabManagerScriptParameters modified: {0}&quot;, LabManagerScriptParameters)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                  <mtbwa:InvokeProcess Arguments="[String.Format(&quot; &quot;&quot;&amp; '{0}' &quot;&quot; {1} &quot;, LabManagerScriptFilename, LabManagerScriptParameters)]" FileName="Powershell" sap:VirtualizedContainerService.HintSize="242,181" Result="[IsValid]">
                                    <mtbwa:InvokeProcess.ErrorDataReceived>
                                      <ActivityAction x:TypeArguments="x:String">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                                        </ActivityAction.Argument>
                                      </ActivityAction>
                                    </mtbwa:InvokeProcess.ErrorDataReceived>
                                    <mtbwa:InvokeProcess.OutputDataReceived>
                                      <ActivityAction x:TypeArguments="x:String">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                                        </ActivityAction.Argument>
                                        <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[stdOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                      </ActivityAction>
                                    </mtbwa:InvokeProcess.OutputDataReceived>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </mtbwa:InvokeProcess>
                                </Sequence>
                                <Sequence x:Key="ForceRigRefresh" sap:VirtualizedContainerService.HintSize="453,100">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="ForceRefresh Rig" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                  <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[LabManagerTryRefreshRig]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[LabManagerForceRefreshRig]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">["$True"]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                                <Sequence x:Key="RefreshRig" sap:VirtualizedContainerService.HintSize="453,100">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Refresh Rig" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                  <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[LabManagerTryRefreshRig]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[LabManagerForceRefreshRig]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">$False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                                <Sequence x:Key="DoNothing" sap:VirtualizedContainerService.HintSize="453,100">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[LabManagerTryRefreshRig]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="No action specified, nothing to do here" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                </Sequence>
                              </Switch>
                              <If Condition="[LabManagerTryRefreshRig]" DisplayName="Try to refresh rig" sap:VirtualizedContainerService.HintSize="473,49">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="301,518">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[LabManagerScriptFilename]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Path.Combine(LabManagerScriptLocalLocation, RefreshRigScript)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If Condition="[DeploymentPlatform = CustomBuildActivities.Enum.DeploymentPlatform.LabManager]" DisplayName="If LabManager is selected as a platform to deploy" sap:VirtualizedContainerService.HintSize="242,49">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Assign sap:VirtualizedContainerService.HintSize="242,100">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[LabManagerScriptParameters]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[String.Format("-LibraryConfigName '{0}' -RigName '{1}' -ForceRefresh {2}", LabManagerLibraryConfigName, LabManagerRigName, LabManagerForceRefreshRig)]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                      <If.Else>
                                        <Assign sap:VirtualizedContainerService.HintSize="242,100">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[LabManagerScriptParameters]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[String.Format("-vAppName '{0}' -vAppTemplateName '{1}' -ForceRefresh {2}", LabManagerRigName, LabManagerLibraryConfigName, LabManagerForceRefreshRig)]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Else>
                                    </If>
                                    <Assign DisplayName="Hydrate Parameters" sap:VirtualizedContainerService.HintSize="242,57">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[LabManagerScriptParameters]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Replace(Replace(LabManagerScriptParameters, "$CIBuildNumber", AppBuildNumber), "$DeploymentBuildNumber", BuildDetail.BuildNumber)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;LabManagerScript Parameters hydrated: &quot; + LabManagerScriptParameters]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                    <mtbwa:InvokeProcess Arguments="[String.Format(&quot; &quot;&quot;&amp; '{0}' &quot;&quot; {1} &quot;, LabManagerScriptFilename, LabManagerScriptParameters)]" DisplayName="Execute Rig Deployment" FileName="Powershell" sap:VirtualizedContainerService.HintSize="242,49" Result="[IsValid]">
                                      <mtbwa:InvokeProcess.ErrorDataReceived>
                                        <ActivityAction x:TypeArguments="x:String">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Assign Rig Deployment Failure Message" sap:VirtualizedContainerService.HintSize="264,181">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[FailedMessage]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[errOutput]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ActivityAction>
                                      </mtbwa:InvokeProcess.ErrorDataReceived>
                                      <mtbwa:InvokeProcess.OutputDataReceived>
                                        <ActivityAction x:TypeArguments="x:String">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                                          </ActivityAction.Argument>
                                          <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="264,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[stdOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                        </ActivityAction>
                                      </mtbwa:InvokeProcess.OutputDataReceived>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </mtbwa:InvokeProcess>
                                  </Sequence>
                                </If.Then>
                              </If>
                              <If Condition="[IsValid = 0]" DisplayName="Is rig valid" sap:VirtualizedContainerService.HintSize="473,49">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="209,208" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Lab manager process passed validation" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Fail build and abort" sap:VirtualizedContainerService.HintSize="230,208">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <mtbwa:SetBuildProperties DisplayName="Set Status to Failed" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="Status" Status="[Microsoft.TeamFoundation.Build.Client.BuildStatus.Failed]" />
                                    <Throw Exception="[New Exception(String.Format(&quot;Lab manager\vCloud section failed for rig {0}&quot;, LabManagerRigName))]" sap:VirtualizedContainerService.HintSize="200,22" />
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="220,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Virtual Platform section skipped" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                          </If.Else>
                        </If>
                      </Sequence>
                      <Sequence DisplayName="Deployment" sap:VirtualizedContainerService.HintSize="222,173">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Int32" Name="ExitCode" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[Not String.IsNullOrEmpty(DeploymentScript)]" DisplayName="If Configured to do deployment" sap:VirtualizedContainerService.HintSize="200,49">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Execute Deployment Script" sap:VirtualizedContainerService.HintSize="264,332">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="DeploymentScriptParametersHydrated" />
                                <Variable x:TypeArguments="x:String" Name="DeploymentScriptLog" />
                                <Variable x:TypeArguments="x:Int32" Name="DeploySequenceCount" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <mtbwa:ConvertWorkspaceItem DisplayName="ConvertWorkspaceItem Deployment Script" sap:VirtualizedContainerService.HintSize="242,22" Input="[DeploymentScript]" Result="[DeploymentScriptFilename]" Workspace="[Workspace]" />
                              <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[DeploySequenceCount]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ForEach x:TypeArguments="x:String" DisplayName="ForEach&lt;String&gt;" sap:VirtualizedContainerService.HintSize="282,203" Values="[DeploymentScriptParameters]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="x:String">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Deployment Sequence" sap:VirtualizedContainerService.HintSize="252,100">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:String" Name="DeploymentLogFileSuffix" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ca:GetCommandLineParameter CommandLine="[item]" sap:VirtualizedContainerService.HintSize="264,22" ParameterName="-RigRelativePath" Result="[DeploymentConfigFilename]" />
                                    <Assign sap:VirtualizedContainerService.HintSize="264,57">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[DeploySequenceCount]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[DeploySequenceCount + 1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="264,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Deployment script parameter is going to be modified. Before :{0} &quot;, item)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                    <Assign sap:VirtualizedContainerService.HintSize="264,57">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[DeploymentScriptParametersHydrated]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Replace(Replace(Replace(String.Format("{0} -RigName '{1}'", item, RigName), "$BinariesDirectory", BuildDetail.DropLocation), "$CIBuildNumber", AppBuildNumber), "$DeploymentBuildNumber", BuildDetail.BuildNumber)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="264,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Deployment script parameter modified. Before :{0} | After: {1} &quot;, item, DeploymentScriptParametersHydrated)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                    <Sequence DisplayName="Initialise Deployment log file suffix" sap:VirtualizedContainerService.HintSize="264,332">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ca:GetCommandLineParameter CommandLine="[item]" DisplayName="Get Groups Setting" sap:VirtualizedContainerService.HintSize="242,22" ParameterName="-Groups" Result="[DeploymentGroups]" />
                                      <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[DeploymentLogFileSuffix]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[Not String.IsNullOrWhiteSpace(DeploymentGroups)]" DisplayName="If Groups specified" sap:VirtualizedContainerService.HintSize="242,49">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="327,602">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="294,57">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[DeploymentLogFileSuffix]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">["."]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ForEach x:TypeArguments="x:String" DisplayName="foreach group" sap:VirtualizedContainerService.HintSize="294,284" Values="[DeploymentGroups.Split(&quot;,&quot;.ToCharArray())]">
                                              <ActivityAction x:TypeArguments="x:String">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="x:String" Name="group" />
                                                </ActivityAction.Argument>
                                                <Sequence sap:VirtualizedContainerService.HintSize="264,181">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[DeploymentLogFileSuffix]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[DeploymentLogFileSuffix + group.Trim() + "_"]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </ActivityAction>
                                            </ForEach>
                                            <Assign sap:VirtualizedContainerService.HintSize="294,57">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[DeploymentLogFileSuffix]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[DeploymentLogFileSuffix.TrimEnd("_".ToCharArray())]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                    <Assign DisplayName="Assign DeploymentScriptLog" sap:VirtualizedContainerService.HintSize="264,57">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[DeploymentScriptLog]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[String.Format("{0}\logs\Setup-DeploymentFromConfig.{1}{2}.log", BuildDetail.DropLocation, Path.GetFileNameWithoutExtension(DeploymentConfigFilename), DeploymentLogFileSuffix)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <mtbwa:InvokeProcess Arguments="[String.Format(&quot; &quot;&quot;&amp; '{0}' &quot;&quot; {1} 2&gt;&amp;1&gt; &quot;&quot;{2}&quot;&quot;&quot;, DeploymentScriptFilename, DeploymentScriptParametersHydrated, DeploymentScriptLog)]" DisplayName="Execute Deployment" FileName="Powershell" sap:VirtualizedContainerService.HintSize="264,49" Result="[ExitCode]">
                                      <mtbwa:InvokeProcess.ErrorDataReceived>
                                        <ActivityAction x:TypeArguments="x:String">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                                          </ActivityAction.Argument>
                                        </ActivityAction>
                                      </mtbwa:InvokeProcess.ErrorDataReceived>
                                      <mtbwa:InvokeProcess.OutputDataReceived>
                                        <ActivityAction x:TypeArguments="x:String">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                                          </ActivityAction.Argument>
                                          <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Message="Deployment has finished successfully" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                        </ActivityAction>
                                      </mtbwa:InvokeProcess.OutputDataReceived>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </mtbwa:InvokeProcess>
                                    <ca:AddHyperlinkToBuildOutput BuildDetail="[BuildDetail]" DisplayName="Setup-Deployment Log Hyperlink" DisplayText="[String.Format(&quot;Setup-Deployment.{0}{1} Log&quot;, Path.GetFileNameWithoutExtension(DeploymentConfigFilename), DeploymentLogFileSuffix)]" sap:VirtualizedContainerService.HintSize="264,22" Url="[DeploymentScriptLog]" />
                                    <ca:AddHyperlinkToBuildOutput BuildDetail="[BuildDetail]" DisplayName="Deployment Log Hyperlink" DisplayText="[String.Format(&quot;Deployment.{0}{1} Log&quot;, Path.GetFileNameWithoutExtension(DeploymentConfigFilename), DeploymentLogFileSuffix)]" sap:VirtualizedContainerService.HintSize="264,22" Url="[Path.Combine(BuildDetail.DropLocation, &quot;logs&quot;, String.Format(&quot;Deployment.{0}{1}.log&quot;, Path.GetFileNameWithoutExtension(DeploymentConfigFilename), DeploymentLogFileSuffix))]" />
                                    <ca:AddHyperlinkToBuildOutput BuildDetail="[BuildDetail]" DisplayName="Deployment Summary Log Hyperlink" DisplayText="[String.Format(&quot;Deployment-Summary.{0}{1} Log&quot;, Path.GetFileNameWithoutExtension(DeploymentConfigFilename), DeploymentLogFileSuffix)]" sap:VirtualizedContainerService.HintSize="264,22" Url="[Path.Combine(BuildDetail.DropLocation, &quot;logs&quot;, String.Format(&quot;DeploymentSummary.{0}{1}.log&quot;, Path.GetFileNameWithoutExtension(DeploymentConfigFilename), DeploymentLogFileSuffix))]" />
                                    <If Condition="[Not String.IsNullOrEmpty(ExitCode.ToString())]" DisplayName="If ExitCode is Zero" sap:VirtualizedContainerService.HintSize="242,49">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="486,433">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If Condition="[ExitCode = 0]" sap:VirtualizedContainerService.HintSize="464,309">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="209,208" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Deployment script exiting with code {0}&quot;, ExitCode)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                            </If.Then>
                                            <If.Else>
                                              <Throw Exception="[New Exception(String.Format(&quot;Deployment of config {0} exited with code {1}, failing the build. Please see deployment summary file for more detail&quot;, DeploymentConfigFilename, ExitCode))]" sap:VirtualizedContainerService.HintSize="220,100" />
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,433" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="The ExitCode is Zero" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </ForEach>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="220,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Deployment Skipped" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                          </If.Else>
                        </If>
                      </Sequence>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="220,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Skipping Deployment" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                  </If.Else>
                </If>
                <If Condition="[EnablePostDeploymentScript]" DisplayName="Run Post Deployment Script [If PostDeploymentScript is not empty]" sap:VirtualizedContainerService.HintSize="755,49">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="733,1312">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[Not String.IsNullOrEmpty(PostDeploymentScript)]" DisplayName="If Post Deployment Script is not empty" sap:VirtualizedContainerService.HintSize="711,1188">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="486,1087">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="464,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;Starting Running Post Deployment Script &quot; + PostDeploymentScript]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            <mtbwa:ConvertWorkspaceItem DisplayName="PostDeploymentScript ToLocal" sap:VirtualizedContainerService.HintSize="464,22" Input="[PostDeploymentScript]" Result="[PostDeploymentScriptLocal]" Workspace="[Workspace]" />
                            <Assign DisplayName="Log File" sap:VirtualizedContainerService.HintSize="464,57">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[PostDeploymentScriptLogFile]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[String.Format("{0}\logs\PostDeploymentTasks.log", BuildDetail.DropLocation)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="464,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;PostDeploymentScriptLogFile: &quot; + PostDeploymentScriptLogFile]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            <Assign sap:VirtualizedContainerService.HintSize="464,57">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[PostDeploymentScriptParametersHydrated]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Replace(Replace(Replace(Replace(PostDeploymentScriptParameters, "$BinariesDirectory", BinariesDirectory), "$CIBuildNumber", AppBuildNumber),"$DeploymentBuildNumber", BuildDetail.Buildnumber), "$DropFolder", BuildDetail.DropLocation)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="464,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]" Message="[String.Format(&quot;PostDeploymentScriptParameters modified. Before: {0} |After: {1}&quot;, PostDeploymentScriptParameters, PostDeploymentScriptParametersHydrated)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            <mtbwa:InvokeProcess Arguments="[String.Format(&quot; &quot;&quot;&amp; '{0}' &quot;&quot; {1} 2&gt;&amp;1&gt; &quot;&quot;{2}&quot;&quot;&quot;, PostDeploymentScriptLocal, PostDeploymentScriptParametersHydrated, PostDeploymentScriptLogFile)]" DisplayName="Run PostDeployment Script" FileName="Powershell" sap:VirtualizedContainerService.HintSize="464,172" Result="[PostDeploymentScriptResult]">
                              <mtbwa:InvokeProcess.ErrorDataReceived>
                                <ActivityAction x:TypeArguments="x:String">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                                  </ActivityAction.Argument>
                                </ActivityAction>
                              </mtbwa:InvokeProcess.ErrorDataReceived>
                              <mtbwa:InvokeProcess.OutputDataReceived>
                                <ActivityAction x:TypeArguments="x:String">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                                  </ActivityAction.Argument>
                                </ActivityAction>
                              </mtbwa:InvokeProcess.OutputDataReceived>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </mtbwa:InvokeProcess>
                            <If Condition="[PostDeploymentScriptResult = 0]" DisplayName="Evaluate Post Deployment Script Result" sap:VirtualizedContainerService.HintSize="464,309">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="209,208" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;PostDeploymentScript completed succesfully, see log file at {0} (requires build to output to a drop folder&quot;, PostDeploymentScriptLogFile)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="230,208">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <mtbwa:SetBuildProperties DisplayName="Set Status to Partially Suceeded" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="Status" Status="[Microsoft.TeamFoundation.Build.Client.BuildStatus.PartiallySucceeded]" />
                                  <mtbwa:WriteBuildError sap:VirtualizedContainerService.HintSize="200,22" Message="[String.Format(&quot;PostDeploymentScript failed, see log file at {0} (requires build to output to a drop folder&quot;, PostDeploymentScriptLogFile)]" />
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,1087" Message="Error in PostDeploymentScript. Please check if the parameter is passed from build definition." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,1312" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Skipping Post Deployment Script" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                  </If.Else>
                </If>
                <Sequence DisplayName="Log the Details" sap:VirtualizedContainerService.HintSize="755,49">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="DeploymentLogFile" />
                    <Variable x:TypeArguments="x:String" Name="DeploymentLogScriptLocal" />
                    <Variable x:TypeArguments="x:Int32" Name="DeploymentLogScriptResult" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[Not String.IsNullOrEmpty(DeploymentLogScript)]" DisplayName="If log script specified" sap:VirtualizedContainerService.HintSize="464,636">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Log the Deployment Details" sap:VirtualizedContainerService.HintSize="301,535">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <mtbwa:ConvertWorkspaceItem sap:VirtualizedContainerService.HintSize="242,22" Input="[DeploymentLogScript]" Result="[DeploymentLogScriptLocal]" Workspace="[Workspace]" />
                        <Assign DisplayName="Assign the Log File " sap:VirtualizedContainerService.HintSize="242,57">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[DeploymentLogFile]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[String.Format("{0}\logs\DeploymentLogFile.log", BuildDetail.DropLocation)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;Build List is: &quot; + BuildNumberList]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                        <mtbwa:InvokeProcess Arguments="[String.Format(&quot; &quot;&quot;&amp; '{0}' &quot;&quot; -BuildNumber '{1}' -AppBuildNumber '{2}' -AppBuildDropLocation '{3}' -DeploymentLogFile '{4}' &quot;, DeploymentLogScriptLocal, BuildDetail.BuildNumber, BuildNumberList, AppBuildDropLocation, DeploymentLogFile)]" DisplayName="Log the details of the Deployment" FileName="Powershell" sap:VirtualizedContainerService.HintSize="242,190" Result="[DeploymentLogScriptResult]">
                          <mtbwa:InvokeProcess.ErrorDataReceived>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                              </ActivityAction.Argument>
                              <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Deployment logging failed. Parameters were: {0}, {1}, {2}, {3}&quot;, DeploymentLogFile, DeploymentLogScriptLocal, AppBuildNumber, BuildDetail.BuildNumber)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            </ActivityAction>
                          </mtbwa:InvokeProcess.ErrorDataReceived>
                          <mtbwa:InvokeProcess.OutputDataReceived>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                              </ActivityAction.Argument>
                              <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;Logging successfuly finished, please check:&quot; + DeploymentLogFile]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            </ActivityAction>
                          </mtbwa:InvokeProcess.OutputDataReceived>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </mtbwa:InvokeProcess>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
                <If Condition="[Not DisableTest]" DisplayName="Run Integration Test [If Integration Tests are Enabled]" sap:VirtualizedContainerService.HintSize="755,1723">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Integration Tests" sap:VirtualizedContainerService.HintSize="530,1622">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence sap:VirtualizedContainerService.HintSize="508,1498">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Set Integration Test Variables" sap:VirtualizedContainerService.HintSize="486,1196">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="ServiceAccountsPassword" />
                            <Variable x:TypeArguments="x:String" Name="DeploymentGroupsList" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[Not String.IsNullOrEmpty(IntegrationTestSettings)]" DisplayName="If test setting file specified" sap:VirtualizedContainerService.HintSize="464,1072">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="231,971">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <mtbwa:ConvertWorkspaceItem sap:VirtualizedContainerService.HintSize="200,22" Input="[IntegrationTestSettings]" Result="[IntegrationTestSettingsFilename]" Workspace="[Workspace]" />
                                <Sequence DisplayName="Update Target Virtual Platform" sap:VirtualizedContainerService.HintSize="200,49">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Switch x:TypeArguments="ce:DeploymentPlatform" Expression="[DeploymentPlatform]" sap:VirtualizedContainerService.HintSize="473,591">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <cf:UpdateAppSetting x:Key="LabManager" DisplayName="Update target platform setting" FileName="[IntegrationTestSettingsFilename]" sap:VirtualizedContainerService.HintSize="453,100" Name="Testing.TargetPlatform" Value="Labmanager" />
                                    <cf:UpdateAppSetting x:Key="VCloud" DisplayName="Update target platform setting" FileName="[IntegrationTestSettingsFilename]" sap:VirtualizedContainerService.HintSize="453,100" Name="Testing.TargetPlatform" Value="vCloud" />
                                    <cf:UpdateAppSetting x:Key="CurrentDomain" DisplayName="Update target platform setting" FileName="[IntegrationTestSettingsFilename]" sap:VirtualizedContainerService.HintSize="453,100" Name="Testing.TargetPlatform" Value="currentdomain" />
                                  </Switch>
                                </Sequence>
                                <cf:UpdateAppSetting DisplayName="Update Rig Name" FileName="[IntegrationTestSettingsFilename]" sap:VirtualizedContainerService.HintSize="200,22" Name="Testing.RigName" Value="[If(String.IsNullOrEmpty(IntegrationRigToTest), &quot;CURRENTDOMAIN&quot;, IntegrationRigToTest.Replace(&quot;$CIBuildNumber&quot;, AppBuildNumber).Replace(&quot;$DeploymentBuildNumber&quot;, BuildDetail.BuildNumber))]" />
                                <mtbwa:ConvertWorkspaceItem DisplayName="ConvertWorkspaceItem Deployment Script" sap:VirtualizedContainerService.HintSize="200,22" Input="[DeploymentScript]" Result="[DeploymentScriptFilename]" Workspace="[Workspace]" />
                                <cf:UpdateAppSetting DisplayName="Update Config file location" FileName="[IntegrationTestSettingsFilename]" sap:VirtualizedContainerService.HintSize="200,22" Name="Testing.RigConfigLocation" Value="[Path.GetDirectoryName(DeploymentScriptFilename)]" />
                                <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Message="[&quot;Updating &quot; + IntegrationTestSettingsFilename + &quot; with setting '&quot; + Path.GetDirectoryName(DeploymentScriptFilename) + &quot;'&quot;]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                <ca:GetCommandLineParameter CommandLine="[DeploymentScriptParameters.First()]" DisplayName="Get Service Account Password" sap:VirtualizedContainerService.HintSize="200,22" ParameterName="-Password" Result="[ServiceAccountsPassword]" />
                                <cf:UpdateAppSetting DisplayName="Update service account file password" FileName="[IntegrationTestSettingsFilename]" sap:VirtualizedContainerService.HintSize="200,22" Name="Testing.ServiceAccountsPassword" Value="[ServiceAccountsPassword]" />
                                <Sequence DisplayName="Setup config file names" sap:VirtualizedContainerService.HintSize="200,49">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ForEach x:TypeArguments="x:String" DisplayName="Set up config file names" sap:VirtualizedContainerService.HintSize="294,346" Values="[DeploymentScriptParameters]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                      </ActivityAction.Argument>
                                      <Sequence sap:VirtualizedContainerService.HintSize="264,243">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ca:GetCommandLineParameter CommandLine="[item]" sap:VirtualizedContainerService.HintSize="242,22" ParameterName="-RigRelativePath" Result="[DeploymentConfigFilename]" />
                                        <Assign DisplayName="Create $ separated list" sap:VirtualizedContainerService.HintSize="242,57">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[DeploymentConfigFileList]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[DeploymentConfigFileList + "$" + DeploymentConfigFilename]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </ForEach>
                                  <Assign DisplayName="Trim leading $" sap:VirtualizedContainerService.HintSize="294,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[DeploymentConfigFileList]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[DeploymentConfigFileList.Substring(1)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                                <cf:UpdateAppSetting DisplayName="Update Config file names" FileName="[IntegrationTestSettingsFilename]" sap:VirtualizedContainerService.HintSize="200,22" Name="Testing.RigConfigFile" Value="[DeploymentConfigFileList]" />
                                <Sequence DisplayName="Setup group settings" sap:VirtualizedContainerService.HintSize="200,49">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ForEach x:TypeArguments="x:String" DisplayName="Set up group settings" sap:VirtualizedContainerService.HintSize="294,346" Values="[DeploymentScriptParameters]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                      </ActivityAction.Argument>
                                      <Sequence sap:VirtualizedContainerService.HintSize="264,243">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ca:GetCommandLineParameter CommandLine="[item]" sap:VirtualizedContainerService.HintSize="242,22" ParameterName="-Groups" Result="[DeploymentGroups]" />
                                        <Assign DisplayName="Create $ separated list" sap:VirtualizedContainerService.HintSize="242,57">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[DeploymentGroupsList]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[DeploymentGroupsList + "$" + DeploymentGroups]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </ForEach>
                                  <Assign DisplayName="Trim leading $" sap:VirtualizedContainerService.HintSize="294,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[DeploymentGroupsList]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[DeploymentGroupsList.Substring(1)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                                <cf:UpdateAppSetting DisplayName="Update Groups Setting" FileName="[IntegrationTestSettingsFilename]" sap:VirtualizedContainerService.HintSize="200,22" Name="Testing.Groups" Value="[DeploymentGroupsList]" />
                                <cf:UpdateAppSetting DisplayName="Update DropFolder Setting" FileName="[IntegrationTestSettingsFilename]" sap:VirtualizedContainerService.HintSize="200,22" Name="Build.DropFolder" Value="[BuildDetail.DropLocation]" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="208,971" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="No integration test config file specified" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            </If.Else>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="Run Tests" sap:VirtualizedContainerService.HintSize="486,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[Not TestSpecsIntegration Is Nothing]" DisplayName="If Not TestSpecsIntegration Is Nothing" sap:VirtualizedContainerService.HintSize="464,201" mtbwt:BuildTrackingParticipant.Importance="Low">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <ForEach x:TypeArguments="mtbwa:TestSpec" DisplayName="For Each TestSpec in TestSpecs" sap:VirtualizedContainerService.HintSize="282,203" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[TestSpecsIntegration]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="mtbwa:TestSpec">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="mtbwa:TestSpec" Name="spec" />
                                  </ActivityAction.Argument>
                                  <TryCatch DisplayName="Try Run Tests" sap:VirtualizedContainerService.HintSize="418,278" mtbwt:BuildTrackingParticipant.Importance="Low">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch.Try>
                                      <If Condition="[TypeOf spec Is Microsoft.TeamFoundation.Build.Workflow.Activities.TestMetadataFileSpec]" DisplayName="If spec Is TestMetadataFileSpec" sap:VirtualizedContainerService.HintSize="464,201" mtbwt:BuildTrackingParticipant.Importance="None">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence DisplayName="Run MSTest for Metadata File" sap:VirtualizedContainerService.HintSize="219,100">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="mtbwa:TestMetadataFileSpec" Name="testMetadataFile" />
                                              <Variable x:TypeArguments="x:String" Name="localTestMetadata" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign x:TypeArguments="mtbwa:TestMetadataFileSpec" DisplayName="Assign spec to testMetadataFile" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[testMetadataFile]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestMetadataFileSpec)]" />
                                            <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[testMetadataFile.MetadataFileName]" Result="[localTestMetadata]" Workspace="[Workspace]" />
                                            <mtbwa:MSTest Category="[testMetadataFile.CategoryFilter]" CommandLineArguments="[testMetadataFile.MSTestCommandLineArgs]" DisplayName="Run MSTest for Metadata File" Flavor="[BuildSettings.PlatformConfigurations.Item(0).Configuration]" sap:VirtualizedContainerService.HintSize="200,22" MaxPriority="[testMetadataFile.MaximumPriority]" MinPriority="[testMetadataFile.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[BuildSettings.PlatformConfigurations.Item(0).Platform]" SearchPathRoot="[outputDirectory]" TestLists="[testMetadataFile.TestLists]" TestMetadata="[localTestMetadata]" ToolPath="[MSTestToolsPath]" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Run MSTest for Test Assemblies" sap:VirtualizedContainerService.HintSize="220,100" mtbwt:BuildTrackingParticipant.Importance="Low">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="mtbwa:TestAssemblySpec" Name="testAssembly" />
                                              <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="testAssemblies" />
                                              <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="testFlavor" />
                                              <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="testPlatform" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign x:TypeArguments="mtbwa:TestAssemblySpec" DisplayName="Assign spec to testAssembly" sap:VirtualizedContainerService.HintSize="589,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[testAssembly]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestAssemblySpec)]" />
                                            <mtbwa:FindMatchingFiles DisplayName="Find Test Assemblies" sap:VirtualizedContainerService.HintSize="589,22" mtbwt:BuildTrackingParticipant.Importance="Low" MatchPattern="[String.Format(&quot;{0}\{1}&quot;, outputDirectory, testAssembly.AssemblyFileSpec)]" Result="[testAssemblies]" />
                                            <If Condition="[testAssemblies.Count() &gt; 0]" DisplayName="If Test Assemblies Found" sap:VirtualizedContainerService.HintSize="589,302" mtbwt:BuildTrackingParticipant.Importance="Low">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <If Condition="[testAssembly.HasTestSettingsFile]" DisplayName="If testAssembly.HasTestSettingsFile" sap:VirtualizedContainerService.HintSize="464,201" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <Sequence DisplayName="Find Test Settings File And Run MSTest" sap:VirtualizedContainerService.HintSize="219,100" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                      <Sequence.Variables>
                                                        <Variable x:TypeArguments="x:String" Name="localTestSettings" />
                                                      </Sequence.Variables>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[testAssembly.TestSettingsFileName]" Result="[localTestSettings]" Workspace="[Workspace]" />
                                                      <mtbwa:MSTest Category="[testAssembly.CategoryFilter]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]" DisplayName="Run MSTest for Test Assemblies" Flavor="[BuildSettings.PlatformConfigurations.Item(0).Configuration]" sap:VirtualizedContainerService.HintSize="200,22" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[BuildSettings.PlatformConfigurations.Item(0).Platform]" SearchPathRoot="[outputDirectory]" TestContainers="[testAssemblies]" TestSettings="[localTestSettings]" ToolPath="[MSTestToolsPath]" />
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <mtbwa:MSTest Category="[testAssembly.CategoryFilter]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]" DisplayName="Run MSTest for Test Assemblies" Flavor="[BuildSettings.PlatformConfigurations.Item(0).Configuration]" sap:VirtualizedContainerService.HintSize="220,100" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[BuildSettings.PlatformConfigurations.Item(0).Platform]" SearchPathRoot="[outputDirectory]" TestContainers="[testAssemblies]" ToolPath="[MSTestToolsPath]" />
                                                  </If.Else>
                                                </If>
                                              </If.Then>
                                            </If>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,20">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="testException" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Handle MSTest Exception" sap:VirtualizedContainerService.HintSize="467,75">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[Not (TypeOf testException Is Microsoft.TeamFoundation.Build.Workflow.Activities.TestFailureException)]" DisplayName="If testException is NOT TestFailureException" mtbwt:BuildTrackingParticipant.Importance="Low">
                                              <If.Then>
                                                <mtbwa:WriteBuildError DisplayName="Write Test Failure Exception message" Message="[testException.Message]" />
                                              </If.Then>
                                            </If>
                                            <mtbwa:SetBuildProperties DisplayName="Set TestStatus to Failed" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" />
                                            <If Condition="[spec.FailBuildOnFailure]" DisplayName="If spec.FailBuildOnFailure" mtbwt:BuildTrackingParticipant.Importance="Low">
                                              <If.Then>
                                                <Assign x:TypeArguments="x:Boolean" DisplayName="Set treatTestFailureAsBuildFailure to True" mtbwt:BuildTrackingParticipant.Importance="Low" To="[treatTestFailureAsBuildFailure]" Value="[True]" />
                                              </If.Then>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </ActivityAction>
                              </ForEach>
                            </If.Then>
                          </If>
                        </Sequence>
                        <If Condition="[treatTestFailureAsBuildFailure And (BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed)]" DisplayName="If TreatTestFailureAsBuildFailure And (TestStatus = Failed)" sap:VirtualizedContainerService.HintSize="486,49" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <mtbwa:SetBuildProperties DisplayName="Set Status to Failed" sap:VirtualizedContainerService.HintSize="269,100" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="Status" Status="[Microsoft.TeamFoundation.Build.Client.BuildStatus.Failed]" />
                          </If.Then>
                        </If>
                      </Sequence>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,1622" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Skipping Tests" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                  </If.Else>
                </If>
                <If Condition="[EnablePostTestingScript]" DisplayName="Run Post Integration Testing Script [If PostTestingScript is not empty]" sap:VirtualizedContainerService.HintSize="755,49">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="511,1107">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="PostTestingScriptLogFile" />
                        <Variable x:TypeArguments="x:Int32" Name="PostTestingScriptResult" />
                        <Variable x:TypeArguments="x:String" Name="PostTestingScriptParametersHydrated" />
                        <Variable x:TypeArguments="x:String" Name="PosttestingScriptLocal" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[Not String.IsNullOrEmpty(PostTestingScript)]" DisplayName="If Post Integration Testing Script is not empty" sap:VirtualizedContainerService.HintSize="489,983">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Evaluate Test Results and Execute Powershell Script" sap:VirtualizedContainerService.HintSize="264,882">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:Int32" Default="-1" Name="IntegrationTestResults" />
                              <Variable x:TypeArguments="x:String" Name="PostIntegrationTestScriptError" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;Starting Running Post Integration Testing Script &quot; + PostTestingScript]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            <mtbwa:ConvertWorkspaceItem DisplayName="PostTestingScript ToLocal" sap:VirtualizedContainerService.HintSize="242,22" Input="[PostTestingScript]" Result="[PostTestingScriptLocal]" Workspace="[Workspace]" />
                            <Assign DisplayName="Log File" sap:VirtualizedContainerService.HintSize="242,57">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[PostTestingScriptLogFile]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[String.Format("{0}\logs\PostTestingTasks.log", BuildDetail.DropLocation)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;PostTestingScriptLogFile: &quot; + PostTestingScriptLogFile]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            <Switch x:TypeArguments="mtbc:BuildPhaseStatus" Expression="[BuildDetail.TestStatus]" sap:VirtualizedContainerService.HintSize="242,49">
                              <Switch.Default>
                                <Assign DisplayName="Assign Default to Unknown" sap:VirtualizedContainerService.HintSize="455,100">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[IntegrationTestResults]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Switch.Default>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign x:Key="Unknown" DisplayName="Assign Tests Results to Unknown" sap:VirtualizedContainerService.HintSize="453,100">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[IntegrationTestResults]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign x:Key="Failed" DisplayName="Assign TestResults for Failed Tests" sap:VirtualizedContainerService.HintSize="453,100">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[IntegrationTestResults]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[-1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign x:Key="Succeeded" DisplayName="Assign TestResults to Successful" sap:VirtualizedContainerService.HintSize="453,100">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[IntegrationTestResults]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Switch>
                            <Assign DisplayName="Hydrate Parameters" sap:VirtualizedContainerService.HintSize="242,57">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[PostTestingScriptParametersHydrated]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Replace(Replace(Replace(Replace(PostTestingScriptParameters, "$BinariesDirectory", BinariesDirectory), "$DeploymentBuildNumber", BuildDetail.BuildNumber), "$TestResult", IntegrationTestResults.ToString()), "$DropFolder", BuildDetail.DropLocation)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]" Message="[String.Format(&quot;PostTestingScriptParameters modified. Before: {0} |After: {1}&quot;, PostTestingScriptParameters, PostTestingScriptParametersHydrated)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            <mtbwa:InvokeProcess Arguments="[String.Format(&quot; &quot;&quot;&amp; '{0}' &quot;&quot; {1} 2&gt;&amp;1&gt; &quot;&quot;{2}&quot;&quot;&quot;, PostTestingScriptLocal, PostTestingScriptParametersHydrated, PostTestingScriptLogFile)]" DisplayName="Run Post Integration Testing Script" FileName="Powershell" sap:VirtualizedContainerService.HintSize="242,49" Result="[PostTestingScriptResult]">
                              <mtbwa:InvokeProcess.ErrorDataReceived>
                                <ActivityAction x:TypeArguments="x:String">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                                  </ActivityAction.Argument>
                                  <Assign DisplayName="Assign errOutput" sap:VirtualizedContainerService.HintSize="242,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[PostIntegrationTestScriptError]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[errOutput]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </ActivityAction>
                              </mtbwa:InvokeProcess.ErrorDataReceived>
                              <mtbwa:InvokeProcess.OutputDataReceived>
                                <ActivityAction x:TypeArguments="x:String">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                                  </ActivityAction.Argument>
                                </ActivityAction>
                              </mtbwa:InvokeProcess.OutputDataReceived>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </mtbwa:InvokeProcess>
                            <If Condition="[Not String.IsNullOrEmpty(PostIntegrationTestScriptError)]" DisplayName="If PostIntegrationTests Fail" sap:VirtualizedContainerService.HintSize="242,49">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <mtbwa:WriteBuildMessage DisplayName="Write Failed Build Message" sap:VirtualizedContainerService.HintSize="219,100" Message="[&quot;Post Integration Test Results failed: &quot; + PostIntegrationTestScriptError]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                              </If.Then>
                              <If.Else>
                                <mtbwa:WriteBuildMessage DisplayName="Write Sucessful Build Message" sap:VirtualizedContainerService.HintSize="220,100" Message="Post Integration Test Successfully Finished" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                              </If.Else>
                            </If>
                            <If Condition="[PostTestingScriptResult = 0]" DisplayName="Evaluate Post Integration Testing Script Result" sap:VirtualizedContainerService.HintSize="242,49">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="209,208" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;PostTestingScript completed succesfully, see log file at {0} (requires build to output to a drop folder&quot;, PostTestingScriptLogFile)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="230,208">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <mtbwa:SetBuildProperties DisplayName="Set Status to Partially Suceeded" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="Status" Status="[Microsoft.TeamFoundation.Build.Client.BuildStatus.PartiallySucceeded]" />
                                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;PostTestingScript failed, see log file at {0} (requires build to output to a drop folder&quot;, PostTestingScriptLogFile)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,882" Message="Error in PostTestingScript. Please check if the parameter is passed from build definition." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,1107" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Skipping Post Integration Testing Script" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                  </If.Else>
                </If>
                <Sequence DisplayName="Move Rig on Completion" sap:VirtualizedContainerService.HintSize="755,49">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[Not String.IsNullOrEmpty(MoveRigScript)]" DisplayName="If MoveRig Value is not Null" sap:VirtualizedContainerService.HintSize="464,201">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <If Condition="[Not String.IsNullOrEmpty(MoveRigWorkspace) And Not String.IsNullOrEmpty(LabManagerScriptLocation)]" DisplayName="If lab manager workspace defined" sap:VirtualizedContainerService.HintSize="219,100">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <If Condition="[BuildDetail.Status &lt;&gt; BuildStatus.Failed]" DisplayName="If deployment has passed testing" sap:VirtualizedContainerService.HintSize="489,751">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="264,650">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;preparing to move rig to '{0}' workspace&quot;, MoveRigWorkspace)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                <mtbwa:ConvertWorkspaceItem sap:VirtualizedContainerService.HintSize="242,22" Input="[LabManagerScriptLocation]" Result="[LabManagerScriptLocalLocation]" Workspace="[Workspace]" />
                                <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[LabManagerScriptFilename]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[Path.Combine(LabManagerScriptLocalLocation, MoveRigScript)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[LabManagerScriptParameters]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[String.Format("-RigName '{0}' -Workspace '{1}'", LabManagerRigName, MoveRigWorkspace)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Hydrate parameters" sap:VirtualizedContainerService.HintSize="242,57">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[LabManagerScriptParameters]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[Replace(Replace(LabManagerScriptParameters, "$CIBuildNumber", AppBuildNumber),"$DeploymentBuildNumber", BuildDetail.Buildnumber)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;LabManagerScriptParameters parameter modified: {0}&quot;, LabManagerScriptParameters)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                <mtbwa:InvokeProcess Arguments="[String.Format(&quot; &quot;&quot;&amp; '{0}' &quot;&quot; {1} &quot;, LabManagerScriptFilename, LabManagerScriptParameters)]" FileName="Powershell" sap:VirtualizedContainerService.HintSize="242,49">
                                  <mtbwa:InvokeProcess.ErrorDataReceived>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                                      </ActivityAction.Argument>
                                      <mtbwa:WriteBuildError sap:VirtualizedContainerService.HintSize="200,22" Message="[errOutput]" />
                                    </ActivityAction>
                                  </mtbwa:InvokeProcess.ErrorDataReceived>
                                  <mtbwa:InvokeProcess.OutputDataReceived>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                                      </ActivityAction.Argument>
                                      <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[stdOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                    </ActivityAction>
                                  </mtbwa:InvokeProcess.OutputDataReceived>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </mtbwa:InvokeProcess>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,650" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Unable to move rig, build has failed" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            </If.Else>
                          </If>
                        </If.Then>
                        <If.Else>
                          <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,751" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Skipping move rig to workspace step, no workspace specified" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                        </If.Else>
                      </If>
                    </If.Then>
                    <If.Else>
                      <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="220,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="There is no workspace partitioning to move in VCloud" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                    </If.Else>
                  </If>
                </Sequence>
                <Sequence DisplayName="Release Notes" sap:VirtualizedContainerService.HintSize="755,49">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="CurrentLabel" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[GenerateReleaseNotes]" DisplayName="If GenerateReleaseNotes" sap:VirtualizedContainerService.HintSize="464,504">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="297,403">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Get labels" sap:VirtualizedContainerService.HintSize="234,49">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Current Label" sap:VirtualizedContainerService.HintSize="464,57">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[CurrentLabel]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[BuildDetail.LabelName]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="464,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;BuildDetail.LabelName is: '{0}'&quot;, CurrentLabel)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                          <If Condition="[String.IsNullOrEmpty(ReleaseNotesLastLabel)]" DisplayName="Derive Last Label" sap:VirtualizedContainerService.HintSize="464,344">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="301,243">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Get last good build label" sap:VirtualizedContainerService.HintSize="242,57">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[ReleaseNotesLastLabel]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[BuildDetail.BuildDefinition.LastGoodBuildLabel]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;ReleaseNotesLastLabel is: '{0}'&quot;, ReleaseNotesLastLabel)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                        <mtbwa:InvokeProcess Arguments="[String.Format(&quot; -Type 'ReleaseNotes' -ReleaseNotes '{0}' -TfsUrl 'http://tdc2tfs001:8080/tfs/ftpdev' -StartLabel '{1}' -EndLabel '{2}'&quot;, Path.Combine(BuildDetail.DropLocation, &quot;ReleaseNotes&quot;, String.Format(&quot;ReleaseNotes_{0}.html&quot;, AppBuildNumber)), ReleaseNotesLastLabel, CurrentLabel)]" DisplayName="Generate Release Notes" FileName="[Path.Combine(BuildDirectory, &quot;Binaries&quot;, &quot;DeploymentTool.exe&quot;)]" sap:VirtualizedContainerService.HintSize="234,190">
                          <mtbwa:InvokeProcess.ErrorDataReceived>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                              </ActivityAction.Argument>
                              <mtbwa:WriteBuildError sap:VirtualizedContainerService.HintSize="200,22" Message="[errOutput]" />
                            </ActivityAction>
                          </mtbwa:InvokeProcess.ErrorDataReceived>
                          <mtbwa:InvokeProcess.OutputDataReceived>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                              </ActivityAction.Argument>
                              <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[stdOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            </ActivityAction>
                          </mtbwa:InvokeProcess.OutputDataReceived>
                        </mtbwa:InvokeProcess>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="781,20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="ex" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="775,208">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <mtbwa:WriteBuildError sap:VirtualizedContainerService.HintSize="200,22" Message="[ex.Message]" />
                    <mtbwa:SetBuildProperties DisplayName="Set Build Status to Failed" sap:VirtualizedContainerService.HintSize="200,22" PropertiesToSet="Status, TestStatus" Status="[BuildStatus.Failed]" TestStatus="[BuildPhaseStatus.Failed]" />
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </If.Then>
        <If.Else>
          <mtbwa:WriteBuildError sap:VirtualizedContainerService.HintSize="200,5224" Message="Build has failed Validation checks" />
        </If.Else>
      </If>
      <Sequence DisplayName="Delete Build Directory" sap:VirtualizedContainerService.HintSize="1020,298">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch sap:VirtualizedContainerService.HintSize="414,174">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsPinned">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <If Condition="[DeleteBuildDirectory]" DisplayName="If Delete Build Directory" sap:VirtualizedContainerService.HintSize="464,309">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="281,208">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Deleting directory '{0}'&quot;, BuildDirectory)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                  <mtbwa:DeleteDirectory Directory="[BuildDirectory]" sap:VirtualizedContainerService.HintSize="200,22" />
                </Sequence>
              </If.Then>
            </If>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,20">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <mtbwa:WriteBuildWarning sap:VirtualizedContainerService.HintSize="394,75" Message="[&quot;Error Deleting Build Directory&quot; + Environment.NewLine + &quot;Message: &quot; + exception.Message]" />
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </Sequence>
    </mtbwa:AgentScope>
    <mtbwa:InvokeForReason DisplayName="Check In Gated Changes for CheckInShelveset Builds" sap:VirtualizedContainerService.HintSize="1042,146" Reason="CheckInShelveset">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <mtbwa:CheckInGatedChanges DisplayName="Check In Gated Changes" sap:VirtualizedContainerService.HintSize="200,22" />
    </mtbwa:InvokeForReason>
  </Sequence>
</Activity>